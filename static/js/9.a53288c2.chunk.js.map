{"version":3,"sources":["config/constants/bridges.ts","views/Bridge/utils/txUtils.ts","views/Bridge/hooks/useFaucet.ts","views/Bridge/hooks/useBridgeMediator.ts","views/Bridge/components/styleds.tsx","views/Bridge/components/Select.tsx","views/Bridge/components/SearchModal/CurrencyList.tsx","views/Bridge/components/SearchModal/filtering.ts","views/Bridge/components/SearchModal/sorting.ts","views/Bridge/components/SearchModal/CurrencySearch.tsx","views/Bridge/components/SearchModal/ImportToken.tsx","views/Bridge/components/SearchModal/types.ts","views/Bridge/components/SearchModal/ManageLists.tsx","views/Bridge/components/SearchModal/ImportRow.tsx","views/Bridge/components/SearchModal/ManageTokens.tsx","views/Bridge/components/SearchModal/Manage.tsx","views/Bridge/components/SearchModal/ImportList.tsx","views/Bridge/components/SearchModal/CurrencySearchModal.tsx","views/Bridge/components/NumericalInput.tsx","views/Bridge/components/BridgeInputPanel.tsx","views/Bridge/components/Page.tsx","views/Bridge/components/Body.tsx","state/bridge/hooks.ts","views/Bridge/components/SwapWarningModal/SafemoonWarning.tsx","views/Bridge/components/SwapWarningModal/BondlyWarning.tsx","views/Bridge/components/SwapWarningModal/Acknowledgement.tsx","views/Bridge/components/SwapWarningModal/index.tsx","views/Bridge/Bridge.tsx","views/Bridge/hooks/useApprove.ts","config/constants/endpoints.ts"],"names":["native","contract","minTx","maxTx","fee","token","parseValue","num","dec","window","BigInt","number","Number","numberDec","value","Math","floor","toString","split","length","countDecimals","round","fetchGasPrice","provider","a","getGasPrice","gasPrice","wait","time","Promise","resolve","setTimeout","callBridgeFaucet","txID","type","chainID","destAddress","toastSuccess","toastError","t","fetch","BRIDGE_FAUCET_API","responseGet","ok","json","has_use_faucet","method","headers","body","JSON","stringify","address","response","console","error","coinTransfer","currency","request","amount","bridgeType","destinationParams","reverseBridgeParamsOtherSide","account","library","isToken","sourceNetwork","destNetwork","destinationParamsOtherSide","destProvider","ethers","providers","JsonRpcProvider","networksUrl","getBlockNumber","fromDestBlock","from","recipient","getDecimalAmount","decimals","mediator","foreignOrigin","chainId","tokenDestinationMediator","tokenSourceMediator","getNativeSourceMediator","getSigner","receiptToken","hash","detectExchangeFinished","getErc677Contract","receiptErc677","nativeSourceMediator","receiptNative","sourceMediatorContract","fromBlock","sourceMediator","tokensBridgedEvent","utils","id","eventAddressArgument","getTokenSourceMediator","stopTime","Date","now","VALIDATOR_TIMEOUT","currentBlock","queryFilter","topics","logsNew","filter","event","args","BRIDGE_TOKEN_LIST","tokens","origin","Wrapper","styled","div","theme","mediaQueries","lg","ArrowWrapper","clickable","css","Text","severity","colors","failure","warning","text","success","button","background","dropdown","attrs","ellipsis","AutoColumn","DropDownHeader","shadows","inset","inputSecondary","input","DropDownListContainer","zIndices","sm","DropDownContainer","width","props","isOpen","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","options","onChange","chainIndex","containerRef","useRef","dropdownRef","useState","setIsOpen","height","containerSize","setContainerSize","toggling","stopPropagation","useEffect","current","offsetWidth","offsetHeight","handleClickOutside","document","addEventListener","removeEventListener","ref","onClick","label","color","map","option","index","selectedIndex","currencyKey","Token","ETHER","StyledBalanceText","Balance","balance","title","toExact","toSignificant","MenuItem","RowBetween","disabled","selected","CurrencyRow","onSelect","isSelected","otherSelected","style","useTranslation","useActiveWeb3React","key","selectedTokenList","useCombinedActiveList","isOnSelectedList","isTokenOnList","customAdded","useIsUserAddedToken","useCurrencyBalance","undefined","Object","prototype","hasOwnProperty","call","className","size","marginRight","chain","Column","bold","symbol","small","maxWidth","name","justifySelf","CircleLoader","CurrencyList","currencies","selectedCurrency","onCurrencySelect","otherCurrency","fixedListRef","showETH","breakIndex","itemData","useMemo","formatted","Currency","slice","Row","useCallback","data","Boolean","currencyEquals","itemKey","itemCount","itemSize","useSortedTokensByQuery","searchQuery","symbolMatch","toLowerCase","s","exactMatches","symbolSubtrings","rest","push","startsWith","trim","useTokenComparator","inverted","balances","useAllTokenBalances","comparator","tokenA","tokenB","balanceA","balanceB","balanceComp","greaterThan","equalTo","getTokenComparator","CurrencySearch","destination","otherSelectedCurrency","fixedList","setSearchQuery","debouncedQuery","useDebounce","invertSearchOrder","allTokens","useBridgeableTokens","tokenComparator","filteredTokens","search","searchingAddress","isAddress","lowerSearchParts","matchesSearch","sParts","s_","every","p","some","sp","endsWith","filterTokens","values","filteredSortedTokens","sort","handleCurrencySelect","inputRef","focus","handleInput","target","checksummedInput","scrollTo","handleEnter","e","inactiveTokens","useFoundOnInactiveList","filteredInactiveTokens","gap","placeholder","scale","autoComplete","onKeyDown","margin","concat","padding","textAlign","mb","ImportToken","CurrencyModalView","confirmed","setConfirmed","addToken","useAddUserToken","inactiveTokenList","useCombinedInactiveList","variant","list","substring","gridTemplateRows","gridGap","outline","startIcon","logoURI","alignItems","mr","justifyContent","href","getBscScanLink","external","checked","ml","userSelect","RowWrapper","active","tertiary","listUrlRowHTMLId","listUrl","replace","ListRow","memo","version","listsByUrl","useSelector","state","lists","byUrl","dispatch","useDispatch","pending","pendingUpdate","isActive","useIsListActive","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","confirm","removeList","handleEnableList","enableList","handleDisableList","disableList","useTooltip","major","minor","patch","keys","fontSize","placement","trigger","targetRef","tooltipVisible","alt","flex","mt","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","useAllLists","activeListUrls","useActiveListUrls","activeCopy","setActiveCopy","fetchList","useFetchListCallback","validUrl","uriToHttp","parseENSAddress","sortedLists","UNSUPPORTED_LIST_URLS","includes","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","then","catch","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","Card","marginLeft","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","useIsTokenActive","CurrencyLogo","opacity","minWidth","Footer","ManageTokens","searchToken","useToken","userAddedTokens","useUserAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","tokenList","isAddressValid","isWarning","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","activeIndex","onItemClick","prev","TextDot","ImportList","listURL","onImport","useTheme","adding","loadingRequestId","handleAddList","message","flexDirection","StyledModalHeader","ModalHeader","gradients","bubblegum","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","CurrencySearchModal","onDismiss","modalView","prevView","usePrevious","config","onBack","manage","StyledInput","align","textSubtle","inputRegex","RegExp","Input","React","onUserInput","nextUserInput","test","escapeRegExp","inputMode","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","CurrencySelectButton","Button","LabelRow","InputPanel","hideInput","Container","CurrencyInputPanel","onMax","showMaxButton","disableCurrencySelect","hideBalance","pair","selectedCurrencyBalance","translatedLabel","useModal","onPresentCurrencyModal","display","cursor","borderRadius","val","currency0","token0","currency1","token1","StyledPage","xs","Page","children","flexGrow","BodyWrapper","Body","useSwapState","bridge","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","path","pairs","liquidityToken","useDerivedSwapInfo","inputError","independentField","typedValue","inputCurrencyId","Field","INPUT","currencyId","outputCurrencyId","OUTPUT","inputCurrency","useCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","typedValueParsed","parseUnits","TokenAmount","JSBI","CurrencyAmount","ether","debug","tryParseAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","indexOf","useUserSlippageTolerance","allowedSlippage","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","balanceIn","amountIn","lessThan","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","forEach","el","SWAP_WARNING","getAddress","SwapWarningTokensConfig","safemoon","component","bondly","cardHeader","BridgePage","ChainContainer","Warning","Emphasize","inverseBubblegum","card","LabelWrapper","FilterContainer","ArrowContainer","ElkNotice","Flex","primary","IndexMap","ChainMap","SymbolMap","Bridge","originIndex","setOriginIndex","destinationIndex","setDestinationIndex","correctChain","usePollBlockNumber","showWrap","useWrapCallback","wrapType","WrapType","NOT_APPLICABLE","parsedAmounts","inputAmount","outputAmount","onCurrencySelection","field","selectCurrency","onSwitchTokens","switchCurrencies","typeInput","onChangeRecipient","setRecipient","useSwapActionHandlers","dependentField","handleTypeInput","formattedAmounts","useApproveCallbackFromTrade","approval","approvalSubmitted","setApprovalSubmitted","ApprovalState","PENDING","maxAmountInput","maxAmountSpend","atMaxAmountInput","exceedsMax","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","handleInputSelect","showSwapWarning","isWarningToken","entries","SwapWarningTokens","find","warningTokenConfig","warningTokenData","warningTokenAddress","shouldShowSwapWarning","handleMaxInput","clearInput","tokenToBridge","amountToBridge","BigNumber","bridgeSelected","bridgeDestinationSelected","bridgeParams","BRIDGES","bridgeParamsOtherSide","reverseBridgeParams","correctParams","needsApproval","setNeedsApproval","useWeb3React","lastUpdated","useLastUpdated","tokenContract","getBep20Contract","allowance","currentAllowance","gt","checkApprovalStatus","useCheckMediatorApprovalStatus","faucetAvailable","valid","isFaucetAvailable","setIsFaucetAvailable","checkFaucetStatus","useCheckFaucetStatus","requestedApproval","setRequestedApproval","approvalComplete","setApprovalComplete","useToast","handleApprove","approve","constants","MaxUint256","tx","status","useApproveMediator","requestedBridgeTransfer","setRequestedBridgeTransfer","handleBridgeTransfer","useBridgeMediator","minTransfer","feePercent","tokenInfo","feeAmount","times","toPrecision","isBridgeable","log","justify","src","subtitle","noConfig","setupNetwork","toLocaleString","lt","isLoading","endIcon","spin","ConnectWalletButton","process","REACT_APP_GRAPH_API_PROFILE","REACT_APP_GRAPH_API_PREDICTION","REACT_APP_GRAPH_API_LOTTERY","REACT_APP_SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","REACT_APP_SNAPSHOT_BASE_URL","INFO_CLIENT","BLOCKS_CLIENT"],"mappings":"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","file":"static/js/9.a53288c2.chunk.js","sourcesContent":["// Refer to bridge token list for minTx on individual tokens\nexport default {\n    '1_20': {\n      native: {\n        '1': {\n          contract: '0xf127003ea39878EFeEE89aA4E22248CC6cb7728E',\n          minTx: 1,\n          maxTx: 1500000, // 1500000000000000000000000\n          fee: 0\n        },\n        '20': {\n          contract: '0x314dfec1Fb4de1e0Be70F260d0a065E497f7E2eB', // 0x88723077663F9e24091D2c30c2a2cE213d9080C6', \n          minTx: 1000, // 1000000000000000000\n          maxTx: 750000, // 750000000000000000000000\n          fee: 0\n        }\n      }, \n      token: {\n        '1': {\n          contract: '0xfBec16ac396431162789FF4b5f65F47978988D7f',\n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 0\n        },\n        '20': {\n          contract: '0xe6fd75ff38Adca4B97FBCD938c86b98772431867', // 0x6Ae6B30F6bb361136b0cC47fEe25E44B7d58605c',\n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 0\n        }\n      }\n    },\n    '20_1': {     \n      native: {\n        '1': {\n          contract: '0x88723077663F9e24091D2c30c2a2cE213d9080C6', // 0x314dfec1Fb4de1e0Be70F260d0a065E497f7E2eB', \n          minTx: 1, // 0.5, // 500000000000000000\n          maxTx: 750000, // 750000000000000000000000\n          fee: 1\n        },\n        '20': {\n          contract: '0xE235CbC85e26824E4D855d4d0ac80f3A85A520E4',\n          minTx: 1000,  // 1000000000000000000\n          maxTx: 1500000, // 1500000000000000000000000\n          fee: 1\n        }\n      }, \n      token: {\n        '1': {\n          contract: '0x6Ae6B30F6bb361136b0cC47fEe25E44B7d58605c', // 0xe6fd75ff38Adca4B97FBCD938c86b98772431867', \n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 1\n        },\n        '20': {\n          contract: '0x0054351c99288D37B96878EDC2319ca006c8B910',\n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 1\n        }\n      }\n    },\n    '128_20': {     \n      native: {\n        '20': {\n          contract: '0x5e071258254c85B900Be01F6D7B3f8F34ab219e7', // token 0xa1ecFc2beC06E4b43dDd423b94Fef84d0dBc8F5c\n          minTx: 0.1, // was 1\n          maxTx: 750000, // 750000000000000000000000\n          fee: 0.1\n        },\n        '128': {\n          contract: '0x4490ee96671855BD0a52Eb5074EC5569496c0162',\n          minTx: 0.1, // was 100,\n          maxTx: 1500000, // 1500000000000000000000000\n          fee: 0.1 // percent\n        }\n      }, \n      token: {\n        '20': {\n          contract: '0x6683268d72eeA063d8ee17639cC9B7C317d1734a',\n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 0,\n\n        },\n        '128': {\n          contract: '0x323b5913dadd3e61e5242Fe44781cb7Dd4BE7EB8',\n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 0\n        }\n      }\n    },\n    '20_128': {    \n      native: {\n        '20': {\n          contract: '0x74efe86928abe5bCD191f2e6C85b01861ea1C17d',\n          minTx: 0.1, // was 1\n          maxTx: 40000, // 40000000000000000000000\n          fee: 0.1\n        },\n        '128': {\n          contract: '0x5acCF25F5722A6ed0606C02AA5d8cFe27F346e1B', // token 0xeceefC50f9aAcF0795586Ed90a8b9E24f55Ce3F3\n          minTx: 0.1, // was 100,\n          maxTx: 750000, // 750000000000000000000000\n          fee: 0.1\n        }\n      }, \n      token: {\n        '20': {\n          contract: '0x59F65A3913F1FFcE7aB684bd8c24ba3790bD376B',\n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 0\n        },\n        '128': {\n          contract: '0x3394577F74B86b9FD4D6e1D8a66c668bC6188379',\n          minTx: 0.5,\n          maxTx: 750000,\n          fee: 0\n        }\n      }\n    }\n}\n","\n\nexport const formatValue = (num: any, dec: number) => {\n    const number = window.BigInt(num);\n    const round = window.BigInt(10 ** Number(dec));\n    const value = Number((number * window.BigInt(1000)) / round) / 1000;\n    return value.toFixed(4);\n};\n\nconst countDecimals = (value: any) => {\n    if (Math.floor(value) === value) return 0;\n    return value.toString().split('.')[1].length || 0;\n};\n\nexport const parseValue = (num: any, dec: number) => {\n    if (!num) {\n        return window.BigInt(0);\n    }\n    const number = Number(num);\n    const numberDec = countDecimals(number);\n    const round = window.BigInt(10 ** Number(dec));\n    const value =\n        (window.BigInt(Math.floor(number * 10 ** numberDec)) * round) /\n        window.BigInt(10 ** numberDec);\n    return value;\n};\n\nexport const fetchGasPrice = async (provider: any) => {\n    const gasPrice = await provider.getGasPrice()\n    return gasPrice\n}","/* eslint-disable no-await-in-loop */\n/* eslint-disable func-names */\n/* eslint-disable object-shorthand */\nimport { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n// import { useTranslation } from 'contexts/Localization'\n// import useToast from 'hooks/useToast'\nimport { BRIDGE_FAUCET_API }  from 'config/constants/endpoints';\n\nconst wait = (time: number) => new Promise(resolve => setTimeout(resolve, time));\n\nexport const useCheckFaucetStatus = (currency, valid, destination) => {\n  const [isFaucetAvailable, setIsFaucetAvailable] = useState(false)\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    const checkFaucetStatus = async () => {\n    if (!valid) { setIsFaucetAvailable(false); return }\n    if (destination !== 20) { setIsFaucetAvailable(false); return }\n    try {\n        const responseGet = await fetch(`${BRIDGE_FAUCET_API}/faucet/${account}`);\n        if (responseGet.ok) {\n            const dataSuccessGet = await responseGet.json();\n             if (dataSuccessGet.has_use_faucet === false) {\n                 setIsFaucetAvailable(true)\n             } else {\n                 setIsFaucetAvailable(false)\n             }\n        }\n    } catch (error) {\n      console.error(JSON.stringify(error))\n    } \n    }\n    checkFaucetStatus()\n  }, [account, valid, destination])\n\n  return isFaucetAvailable\n}\n\nexport const callBridgeFaucet = async (txID: string, type: string, chainID: number, destAddress: string,\n    toastSuccess: any, toastError: any, t: any) => {\n    \n    try {\n        const responseGet = await fetch(`${BRIDGE_FAUCET_API}/faucet/${destAddress}`);\n        // console.log('response', responseGet)\n\n        if (responseGet.ok) {\n            const dataSuccessGet = await responseGet.json();\n                \n            if (dataSuccessGet.has_use_faucet === false) {\n                const response = await fetch(`${BRIDGE_FAUCET_API}/faucet`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        txID: txID,\n                        chainID: chainID,\n                        address: destAddress,\n                        type: type\n                    }),\n                });\n\n                if (response.ok) {\n                    await response.json();\n                    await wait(5000);\n                    toastSuccess(t('0.01 ELA received from gas faucet!')); // dataSuccess?.success?.message\n                } else {\n                    await response.json();\n                    await wait(5000);\n                    toastError(t('Error receiving faucet distribution')); // dataError?.error?.message\n                }\n            }\n        }\n    } catch (error) {\n      console.error(JSON.stringify(error))\n    } \n  }","/* eslint-disable no-await-in-loop */\n/* eslint-disable func-names */\n/* eslint-disable object-shorthand */\nimport { useCallback, useState } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers} from 'ethers'\nimport { getTokenSourceMediator, getNativeSourceMediator, getErc677Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport  networksUrl from 'config/constants/networks'\nimport useToast from 'hooks/useToast'\nimport { VALIDATOR_TIMEOUT } from 'config/constants'\nimport { getDecimalAmount } from 'utils/formatBalance'\nimport { callBridgeFaucet } from \"./useFaucet\";\nimport { fetchGasPrice } from \"../utils/txUtils\";\nimport BRIDGE_TOKEN_LIST from '../../../config/constants/tokenLists/glide-bridge.tokenlist.json'\n\nconst wait = (time: number) => new Promise(resolve => setTimeout(resolve, time));\n\nexport const useBridgeMediator = (currency, amount, bridgeType,\n    bridgeParams, bridgeParamsOtherSide, \n    reverseBridgeParams, reverseBridgeParamsOtherSide,\n    sourceNetwork, destNetwork) => {\n  const [requestedBridgeTransfer, setRequestedBridgeTransfer] = useState(false);\n  const { toastSuccess, toastError } = useToast();\n  const { t } = useTranslation();\n  const { account, library } = useWeb3React();\n\n  const handleBridgeTransfer = useCallback(async () => {\n    setRequestedBridgeTransfer(true);\n    const isToken = currency instanceof Token;\n\n    // do coin transfer\n    try {\n        await coinTransfer(currency, bridgeParams, amount, bridgeType,\n            reverseBridgeParams, reverseBridgeParamsOtherSide, account, library, isToken, sourceNetwork, \n            destNetwork, bridgeParamsOtherSide, \n            toastSuccess, toastError, t);\n        setRequestedBridgeTransfer(false);\n    } catch (e) {\n        setRequestedBridgeTransfer(false)\n        console.error(e)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n\n  }, [currency, amount, bridgeType, bridgeParams, bridgeParamsOtherSide, reverseBridgeParams, reverseBridgeParamsOtherSide,  \n    account,  library, sourceNetwork, destNetwork, t, toastError, toastSuccess])\n\n  return { handleBridgeTransfer, requestedBridgeTransfer }\n}\n\nexport const coinTransfer = async function(currency: any, request: any, amount: any, bridgeType: string,\n    destinationParams: any, reverseBridgeParamsOtherSide: any,\n    account: any, library: any, isToken: boolean, \n    sourceNetwork: number, destNetwork: number, destinationParamsOtherSide: any,\n    toastSuccess: any, toastError: any, t: any) {\n\n    const destProvider = new ethers.providers.JsonRpcProvider(networksUrl[destNetwork]);\n    const fromDestBlock = await destProvider.getBlockNumber();\n    const from = account;\n    const recipient = account;\n    const value = getDecimalAmount(amount, currency.decimals).toString()\n\n    // if token, then call erc677Contract, otherwise nativeSourceMediator\n    if (bridgeType === \"token\" && isToken) {\n        const type = 'relayTokens';\n\n        const mediator = foreignOrigin(currency.address, currency.chainId) ? destinationParams.contract : request.contract;\n        const tokenDestinationMediator = foreignOrigin(currency.address, currency.chainId) ? reverseBridgeParamsOtherSide.contract : destinationParamsOtherSide.contract;\n\n        const tokenSourceMediator = getNativeSourceMediator(mediator, library.getSigner(account) );\n        const gasPrice = await fetchGasPrice(library.getSigner(account));\n\n        const receiptToken = await tokenSourceMediator[\"relayTokens(address,address,uint256)\"](currency.address, recipient, value, {\n            from: from,\n            gasPrice: gasPrice,\n        });\n\n        await receiptToken.wait(1);\n        toastSuccess(t('Bridging in process. Awaiting relay from mediator.'));\n        if (destNetwork === 20) {\n            callBridgeFaucet(receiptToken.hash, type, sourceNetwork, recipient, toastSuccess, toastError, t);\n        }\n\n        await detectExchangeFinished(account, bridgeType, sourceNetwork, destNetwork, tokenDestinationMediator, destinationParamsOtherSide,\n            receiptToken.hash, isToken,\n            toastSuccess, toastError, t, fromDestBlock);\n\n    } else if (bridgeType === \"native\" && isToken) {\n        const type = 'transferAndCall';\n        const tokenSourceMediator = getErc677Contract(currency.address, library.getSigner(account), );\n        const gasPrice = await fetchGasPrice(library.getSigner(account));\n\n        const receiptErc677 = await tokenSourceMediator[\"transferAndCall(address,uint256,bytes)\"](destinationParams.contract, value, from, {\n            from: from,\n            gasPrice: gasPrice.toString()\n        });\n        await receiptErc677.wait(1);\n        toastSuccess(t('Bridging in process. Awaiting relay from mediator.'));\n        if (destNetwork === 20) {\n            callBridgeFaucet(receiptErc677.hash, type, sourceNetwork, recipient, toastSuccess, toastError, t);\n        }\n\n        await detectExchangeFinished(account, bridgeType, sourceNetwork, destNetwork, reverseBridgeParamsOtherSide.contract, destinationParamsOtherSide,\n            receiptErc677.hash, isToken,\n            toastSuccess, toastError, t, fromDestBlock);\n    } else {\n        const type = 'relayTokens';\n        const nativeSourceMediator = getNativeSourceMediator(request.contract, library.getSigner(account));\n\n\n        const receiptNative = await nativeSourceMediator[\"relayTokens(address)\"](recipient, {\n            from: from,\n            value: value\n        });\n        await receiptNative.wait(1);\n        toastSuccess(t('Bridging in process. Awaiting relay from mediator.'));\n        if (destNetwork === 20) {\n            callBridgeFaucet(receiptNative.hash, type, sourceNetwork, recipient, toastSuccess, toastError, t);\n        }\n\n        await detectExchangeFinished(account, bridgeType, sourceNetwork, destNetwork, destinationParamsOtherSide.contract, destinationParamsOtherSide,\n            receiptNative.hash, isToken,\n            toastSuccess, toastError, t, fromDestBlock);\n    }\n};\n\n// detect is destination exchange finished transfer\nexport const detectExchangeFinished = async function(recipient: any, bridgeType: string,\n    sourceNetwork: number, destNetwork: number,\n    sourceMediatorContract: string,\n    destinationParamsOtherSide: any, \n    txID: string, isToken: boolean,\n    toastSuccess: any, toastError: any, t: any, fromBlock: number) {\n    \n    const destProvider = new ethers.providers.JsonRpcProvider(networksUrl[destNetwork]);\n    let sourceMediator;\n    let tokensBridgedEvent;\n    let eventAddressArgument;\n\n    if (bridgeType === \"native\") {\n        sourceMediator = getNativeSourceMediator(sourceMediatorContract, destProvider, );\n        tokensBridgedEvent = ethers.utils.id(\"TokensBridged(address,uint256,bytes32)\");\n        eventAddressArgument = 0;\n    } else {\n        sourceMediator = getTokenSourceMediator(sourceMediatorContract, destProvider, );\n        tokensBridgedEvent = ethers.utils.id(\"TokensBridged(address,address,uint256,bytes32)\");\n        eventAddressArgument = 1;\n    }\n\n    // get when transfer is finished \n    const stopTime = Date.now() + VALIDATOR_TIMEOUT\n    while (Date.now() <= stopTime) {\n        const currentBlock = await destProvider.getBlockNumber();\n\n        const logsNew = await sourceMediator.queryFilter({address: destinationParamsOtherSide.contract,\n            topics: [tokensBridgedEvent]} , fromBlock , currentBlock);\n\n        const confirmationEvent = logsNew.filter(event => event.args[eventAddressArgument] === recipient);\n\n        if (confirmationEvent.length > 0) {\n            toastSuccess(t('Transfer complete! You can now use your assets on the destination network.'));\n            return;\n        }\n\n        if ((Date.now()+177000) < stopTime && (Date.now()+183000) > stopTime) { // 2 minutes elapsed, 3 minutes to go\n            toastSuccess(\"Spinning, spinning, spinning...\");\n        }\n\n        if ((Date.now()+117000) < stopTime && (Date.now()+123000) > stopTime) { // 3 minutes elapsed, 2 minutes to go \n            toastSuccess(\"Ugh how long does this take?\");\n        }\n\n        if ((Date.now()+57000) < stopTime && (Date.now()+63000) > stopTime) { // 4 minutes elapsed, 1 minute to go\n            toastSuccess(\"We'll give it one more minute\");\n        }\n        \n        await wait(5000);\n    }\n\n    if (Date.now() > stopTime) {\n        toastError(\"Bridge completion event not detected within 5 minutes. Please monitor block explorer for receipt.\");\n    }\n}\n\nexport const foreignOrigin = function(address: string, chainId: number) {\n    const tokenInfo = BRIDGE_TOKEN_LIST.tokens.filter(token => token.address === address)[0]\n    const { origin } = tokenInfo\n    if (origin !== chainId) return true;\n    return false;\n}","import React from 'react'\nimport { Text, ErrorIcon } from '@glide-finance/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 0 1rem 1rem 1rem;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0 2rem 2rem 2rem;\n  }\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@glide-finance/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 112px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 136px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 112px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 136px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n  chainIndex: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange, chainIndex }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  // const [selectedOptionIndex, setSelectedOptionIndex] = useState(chainIndex)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    // setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          {/* <Text>{options[selectedOptionIndex].label}</Text> */}\n          <Text>{options[chainIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            // index !== selectedOptionIndex ? (\n            index !== chainIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@glide-finance/sdk'\nimport { Text } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\n// import { wrappedCurrency } from 'utils/wrappedCurrency'\n// import { LightGreyCard } from 'components/Card'\n// import QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from 'state/lists/hooks'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport { useIsUserAddedToken } from 'hooks/Tokens'\nimport Column from 'components/Layout/Column'\nimport { RowFixed, RowBetween } from 'components/Layout/Row'\nimport { CurrencyLogo } from 'components/Logo'\nimport CircleLoader from 'components/Loader/CircleLoader'\nimport { isTokenOnList } from 'utils'\n// import ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\n// const FixedContentRow = styled.div`\n//   padding: 4px 28px;\n//   height: 56px;\n//   display: grid;\n//   grid-gap: 16px;\n//   align-items: center;\n// `\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  origin,\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  origin: number\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  const token = currency ? Object.prototype.hasOwnProperty.call(currency, 'address') : undefined\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} chain={origin} />\n      <Column>\n        {/* <Text bold>{token ? currency.symbol : currency.symbol === 'ELA' && chainId === 1 ? 'ETH' : currency.symbol === 'ELA' && chainId === 128 ? 'HT' : currency.symbol}</Text> */}\n        <Text bold>\n          {token ? currency.symbol : origin === 20 ? 'ELA' : origin === 1 ? 'ETH' : origin === 128 && 'HT'}\n        </Text>\n        {/* <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {token ? currency.name : currency.symbol === 'ELA' && chainId === 1 ? 'Ethereum' : currency.symbol === 'ELA' && chainId === 128 ? 'Huobi Token' : currency.symbol === 'ELA' && chainId === 20 ? 'Elastos' : currency.name }\n        </Text> */}\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && t('Added by user')}{'• '}\n          {token\n            ? currency.name\n            : origin === 20\n            ? 'Elastos'\n            : origin === 1\n            ? 'Ethereum'\n            : origin === 128 && 'Huobi Token'}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  origin,\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  // showImportView,\n  // setImportToken,\n  breakIndex,\n}: {\n  origin: number\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  // showImportView: () => void\n  // setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  // const { chainId } = useActiveWeb3React()\n\n  // const inactiveTokens: {\n  //   [address: string]: Token\n  // } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      // const token = wrappedCurrency(currency, chainId)\n      // const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      // if (index === breakIndex || !data) {\n      //   return (\n      //     <FixedContentRow style={style}>\n      //       <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n      //         <RowBetween>\n      //           <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n      //           <QuestionHelper\n      //             text={t(\n      //               \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n      //             )}\n      //             ml=\"4px\"\n      //           />\n      //         </RowBetween>\n      //       </LightGreyCard>\n      //     </FixedContentRow>\n      //   )\n      // }\n\n      // if (showImport && token) {\n      //   return (\n      //     <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n      //   )\n      // }\n      return (\n        <CurrencyRow\n          origin={origin}\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [origin, onCurrencySelect, otherCurrency, selectedCurrency],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { isAddress } from 'utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Token, TokenAmount } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from 'state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@glide-finance/sdk'\nimport { Text, Input, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\n// import { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\n// import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBridgeableTokens, useFoundOnInactiveList } from 'hooks/Tokens'\nimport { isAddress } from 'utils'\nimport Column, { AutoColumn } from 'components/Layout/Column'\nimport Row from 'components/Layout/Row'\n// import CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n// import ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  origin: number\n  destination: number\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  // showCommonBases?: boolean\n  // showImportView: () => void\n  // setImportToken: (token: Token) => void\n}\n\n// const swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  origin,\n  destination,\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n}: // showCommonBases,\n// showImportView,\n// setImportToken,\nCurrencySearchProps) {\n  const { t } = useTranslation()\n  // const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useBridgeableTokens(origin, destination)\n\n  // if they input an address, use it\n  // const searchToken = useToken(debouncedQuery)\n  // const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  // const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'el' || s === 'ela'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      // if (audioPlay) {\n      //   swapSound.play()\n      // }\n    },\n    [onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'ela') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search by name')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {/* {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )} */}\n        </AutoColumn>\n        {/* {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) :  */}\n        {filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              origin={origin}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              // showImportView={showImportView}\n              // setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@glide-finance/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@glide-finance/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create an ERC-20 token on ESC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on explorer')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@glide-finance/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from 'state'\nimport { acceptListUpdate, removeList, disableList, enableList } from 'state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from 'state/lists/hooks'\nimport uriToHttp from 'utils/uriToHttp'\n\nimport Column, { AutoColumn } from 'components/Layout/Column'\nimport { ListLogo } from 'components/Logo'\nimport Row, { RowFixed, RowBetween } from 'components/Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@glide-finance/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from 'components/Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@glide-finance/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {t('If you purchase a token from this list, you may not be able to sell it back.')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@glide-finance/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n} from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\n// const Footer = styled.div`\n//   width: 100%;\n//   background-color: ${({ theme }) => theme.colors.backgroundAlt};\n//   text-align: center;\n// `\n\nconst StyledModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  origin: number\n  destination: number\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  // showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  origin,\n  destination,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  // showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <StyledModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </StyledModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            origin={origin}\n            destination={destination}\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            // showCommonBases={showCommonBases}\n            // showImportView={() => setModalView(CurrencyModalView.importToken)}\n            // setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {/* {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )} */}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@glide-finance/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../../state/wallet/hooks'\nimport CurrencySearchModal from './SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../../../components/Logo'\n\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  background: ${({ theme }) => theme.colors.input};\n`\n// border: 1px solid ${({ theme }) => theme.colors.input};\n// background: linear-gradient(250deg, #17264f 0%, hsl(220, 51%, 23%) 100%);\n\ninterface CurrencyInputPanelProps {\n  value: string\n  origin: number\n  destination: number\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  // showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  origin,\n  destination,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  // showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n  const { chainId } = useActiveWeb3React()\n  const token = currency ? Object.prototype.hasOwnProperty.call(currency, 'address') : undefined\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      origin={origin}\n      destination={destination}\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      // showCommonBases={showCommonBases}\n    />,\n  )\n\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} chain={chainId} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {/* {chainId === 1 ? `ETH` : chainId === 128 ? `HT` : (currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')} */}\n                  {currency && currency.symbol\n                    ? token\n                      ? currency.symbol\n                      : chainId === 1 && currency.symbol === 'ELA'\n                      ? 'ETH'\n                      : chainId === 128 && currency.symbol === 'ELA'\n                      ? 'HT'\n                      : currency.symbol\n                    : t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@glide-finance/uikit'\n// import Footer from 'components/Menu/Footer'\n// import SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      {/* <SubNav /> */}\n      {children}\n      <Flex flexGrow={1} />\n      {/* <Footer /> */}\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  margin: 0 auto;\n  max-width: 478px;\n  width: 100%;\n  z-index: 1;\n  background: none;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function Body({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@glide-finance/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['bridge'] {\n  return useSelector<AppState, AppState['bridge']>((state) => state.bridge)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'ELA' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'ELA') return 'ELA'\n    if (valid === false) return 'ELA'\n  }\n  return 'ELA' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@glide-finance/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@glide-finance/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useEffect, useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Currency, CurrencyAmount, ETHER, Token } from '@glide-finance/sdk'\nimport {\n  Flex,\n  Button,\n  Text,\n  ArrowForwardIcon,\n  useModal,\n  AutoRenewIcon,\n  LinkExternal,\n  Image,\n} from '@glide-finance/uikit'\n// import PageHeader from 'components/PageHeader'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport { setupNetwork } from 'utils/wallet'\nimport BRIDGES from 'config/constants/bridges'\nimport { usePollBlockNumber } from 'state/block/hooks'\n// import useTokenBalance from '../../hooks/useTokenBalance'\n// import { useBridgeableTokens } from 'hooks/Tokens'\nimport BigNumber from 'bignumber.js'\nimport { useCheckMediatorApprovalStatus, useApproveMediator } from './hooks/useApprove'\nimport { useCheckFaucetStatus } from './hooks/useFaucet'\nimport { useBridgeMediator } from './hooks/useBridgeMediator'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { ArrowWrapper, Wrapper } from './components/styleds'\nimport Select, { OptionProps } from './components/Select'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport BridgeInputPanel from './components/BridgeInputPanel'\nimport { AutoRow } from '../../components/Layout/Row'\nimport Page from './components/Page'\nimport Body from './components/Body'\nimport { GradientHeader } from '../../components/App'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/bridge/actions'\nimport { useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/bridge/hooks'\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\n// import CircleLoader from '../../components/Loader/CircleLoader'\nimport SwapWarningModal from './components/SwapWarningModal'\nimport BRIDGE_TOKEN_LIST from '../../config/constants/tokenLists/glide-bridge.tokenlist.json'\n\nconst BridgePage = styled(Page)`\n  padding-top: 10vh;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background: radial-gradient(40% 55% at 45% 57.5%, #d97645 0%, rgba(242, 173, 108, 0.4) 25%, rgba(6, 9, 20, 0) 72.5%),\n      radial-gradient(40% 45% at 55% 47.5%, #48b9ff 0%, rgba(72, 185, 255, 0.4) 25%, rgba(6, 9, 20, 0) 72.5%);\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n    background-position-y: -2vh;\n  }\n`\n\nconst ChainContainer = styled.div`\n  align-items: center;\n  border-radius: 14px;\n`\nconst Warning = styled.div`\n  text-align: center;\n`\nconst Emphasize = styled.div`\n  text-align: center;\n  background: ${({ theme }) => theme.colors.gradients.inverseBubblegum};\n  border: 1px solid ${({ theme }) => theme.colors.input};\n  border-radius: 14px;\n  padding: 10px;\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\nconst ArrowContainer = styled.div`\n  align-items: center;\n  border-radius: 20px;\n  padding: 0.25rem;\n  margin-bottom: 1.5rem;\n  background-color: ${({ theme }) => theme.colors.input};\n`\n\nconst ElkNotice = styled(Flex)`\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 16px;\n  margin-bottom: 20px;\n  padding: 16px;\n  max-width: 478px;\n  width: 100%;\n`\n\n// move to config popsicle\nconst IndexMap = {\n  0: 'Elastos',\n  1: 'Ethereum',\n  2: 'Heco',\n}\nconst ChainMap = {\n  0: 20,\n  1: 1,\n  2: 128,\n}\nconst SymbolMap = {\n  20: 'ELA',\n  1: 'ETH',\n  128: 'HT',\n}\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst Bridge: React.FC = () => {\n  const { t } = useTranslation()\n  const [originIndex, setOriginIndex] = useState(0)\n  const [destinationIndex, setDestinationIndex] = useState(2)\n  const { account, chainId, library } = useActiveWeb3React()\n  const correctChain = ChainMap[originIndex] === chainId\n  usePollBlockNumber()\n\n  // const [requestedApproval, setRequestedApproval] = useState<boolean>(false)\n\n  const handleOriginChange = (option: OptionProps): void => {\n    clearInput()\n    switch (option.value) {\n      case 'elastos':\n        setOriginIndex(0)\n        setDestinationIndex(2)\n        setupNetwork(20, library)\n        break\n      case 'ethereum':\n        setOriginIndex(1)\n        setDestinationIndex(0)\n        setupNetwork(1, library)\n        break\n      case 'heco':\n        setOriginIndex(2)\n        setDestinationIndex(0)\n        setupNetwork(128, library)\n        break\n      default:\n        setOriginIndex(2)\n        setDestinationIndex(0)\n        break\n    }\n  }\n\n  const handleDestinationChange = (option: OptionProps): void => {\n    clearInput()\n    switch (option.value) {\n      case 'elastos':\n        setDestinationIndex(0)\n        if (originIndex === 1 || originIndex === 2) return\n        if (originIndex === 0) setOriginIndex(2)\n        break\n      case 'ethereum':\n        setDestinationIndex(1)\n        if (originIndex === 0) return\n        if (originIndex === 1 || originIndex === 2) setOriginIndex(0)\n        break\n      case 'heco':\n        setDestinationIndex(2)\n        if (originIndex === 0) return\n        if (originIndex === 1 || originIndex === 2) setOriginIndex(0)\n        break\n      default:\n        setDestinationIndex(0)\n        break\n    }\n  }\n\n  const reverseBridge = () => {\n    clearInput()\n    setOriginIndex(destinationIndex)\n    setDestinationIndex(originIndex)\n  }\n\n  const switchNetwork = (id) => {\n    setupNetwork(id, library)\n    clearInput()\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n  // swap state\n  const { independentField, typedValue } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies } = useDerivedSwapInfo()\n\n  const { wrapType } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onCurrencySelection, onUserInput } = useSwapActionHandlers()\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n  const [approval] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n  const exceedsMax = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.greaterThan(maxAmountInput))\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      onUserInput(Field.INPUT, '')\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onUserInput, onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const clearInput = useCallback(() => {\n    onUserInput(Field.INPUT, '')\n    onCurrencySelection(Field.INPUT, undefined)\n  }, [onUserInput, onCurrencySelection])\n\n  const tokenToBridge = currencies[Field.INPUT]\n  const amountToBridge =\n    Number(formattedAmounts[Field.INPUT]) >= 0 ? new BigNumber(formattedAmounts[Field.INPUT]) : new BigNumber(0)\n  const symbol =\n    currencyKey(tokenToBridge) === 'ETHER' ? SymbolMap[chainId] : tokenToBridge ? tokenToBridge.symbol : undefined\n  const bridgeSelected = `${ChainMap[originIndex]}_${ChainMap[destinationIndex]}`\n  const bridgeDestinationSelected = `${ChainMap[destinationIndex]}_${ChainMap[originIndex]}`\n  const bridgeType = tokenToBridge\n    ? tokenToBridge.symbol === 'ELA' || tokenToBridge.symbol === 'ETH' || tokenToBridge.symbol === 'HT'\n      ? 'native'\n      : 'token'\n    : undefined // popsicle\n\n  // eslint-disable-next-line prefer-const\n  let bridgeParams =\n    bridgeType && chainId === ChainMap[originIndex] ? BRIDGES[bridgeSelected][bridgeType][chainId] : undefined\n  const bridgeParamsOtherSide =\n    bridgeType && chainId === ChainMap[originIndex]\n      ? BRIDGES[bridgeSelected][bridgeType][ChainMap[destinationIndex]]\n      : undefined\n  const reverseBridgeParams =\n    bridgeType && chainId === ChainMap[originIndex]\n      ? BRIDGES[bridgeDestinationSelected][bridgeType][chainId]\n      : undefined\n  const reverseBridgeParamsOtherSide =\n    bridgeType && chainId === ChainMap[originIndex]\n      ? BRIDGES[bridgeDestinationSelected][bridgeType][ChainMap[destinationIndex]]\n      : undefined\n  const correctParams = bridgeParams !== undefined\n  const needsApproval = useCheckMediatorApprovalStatus(tokenToBridge, bridgeParams, amountToBridge, reverseBridgeParams)\n\n  const faucetAvailable = useCheckFaucetStatus(tokenToBridge, correctParams, ChainMap[destinationIndex])\n  const { handleApprove, requestedApproval, approvalComplete } = useApproveMediator(\n    tokenToBridge,\n    bridgeParams,\n    reverseBridgeParams,\n  )\n  const { handleBridgeTransfer, requestedBridgeTransfer } = useBridgeMediator(\n    tokenToBridge,\n    amountToBridge,\n    bridgeType,\n    bridgeParams,\n    bridgeParamsOtherSide,\n    reverseBridgeParams,\n    reverseBridgeParamsOtherSide,\n    ChainMap[originIndex],\n    ChainMap[destinationIndex],\n  )\n\n  let minTransfer = correctParams ? bridgeParams.minTx : '0'\n  let feePercent = correctParams ? bridgeParams.fee : '0'\n  if (tokenToBridge instanceof Token) {\n    const tokenInfo = BRIDGE_TOKEN_LIST.tokens.filter((token) => token.address === tokenToBridge.address)[0]\n    if (tokenInfo?.minTx !== undefined) {\n      minTransfer = tokenInfo.minTx\n    }\n    if (tokenInfo?.fee !== undefined) {\n      feePercent = tokenInfo.fee\n    }\n  }\n\n  const feeAmount =\n    correctParams && amountToBridge.gt(0)\n      ? new BigNumber(feePercent).div(new BigNumber(100)).times(amountToBridge).toPrecision(3)\n      : 0\n  const isBridgeable =\n    correctParams && amountToBridge >= minTransfer && amountToBridge <= bridgeParams.maxTx && !exceedsMax\n\n  console.log(tokenToBridge)\n\n  return (\n    <>\n      <BridgePage>\n        <ElkNotice>\n          <AutoRow justify=\"center\">\n            <Text bold color=\"primary\" mb=\"8px\">\n              {t(`Not the chains you're looking for? Check out Elk and bridge to Elastos from 14 different networks!`)}\n            </Text>\n            <Image src=\"/images/tokens/elk.svg\" width={36} height={36} mr=\"16px\" mt=\"0px\" />\n            <LinkExternal\n              color=\"text\"\n              href=\"https://app.elk.finance/?utm_source=glide&utm_medium=banner&utm_campaign=elknet&utm_id=projectpromo#/elknet\"\n            >\n              {t('Elk Finance')}\n            </LinkExternal>\n          </AutoRow>\n        </ElkNotice>\n        <Body>\n          <GradientHeader title={t('Bridge')} subtitle={t('Map tokens to and from the Elastos Smart Chain')} noConfig />\n          <Wrapper id=\"bridge-page\">\n            <AutoRow justify=\"center\">\n              <AutoColumn gap=\"md\" style={{ padding: '1rem 0' }}>\n                <ChainContainer>\n                  <AutoRow justify=\"center\">\n                    <Text color=\"textSubtle\">{t('From')}</Text>\n                  </AutoRow>\n                  <AutoRow justify=\"center\" style={{ padding: '0.5rem' }}>\n                    <img src={`images/networks/${IndexMap[originIndex]}.png`} alt={IndexMap[originIndex]} width={75} />\n                  </AutoRow>\n                  <AutoRow justify=\"center\">\n                    <FilterContainer>\n                      <LabelWrapper>\n                        <Select\n                          chainIndex={originIndex}\n                          options={[\n                            {\n                              label: 'Elastos',\n                              value: 'elastos',\n                            },\n                            {\n                              label: 'Ethereum',\n                              value: 'ethereum',\n                            },\n                            {\n                              label: 'Heco',\n                              value: 'heco',\n                            },\n                          ]}\n                          onChange={handleOriginChange}\n                        />\n                      </LabelWrapper>\n                    </FilterContainer>\n                  </AutoRow>\n                </ChainContainer>\n              </AutoColumn>\n              <AutoColumn gap=\"md\" style={{ padding: '1rem 0' }}>\n                <ArrowContainer>\n                  <ArrowWrapper clickable onClick={reverseBridge}>\n                    <ArrowForwardIcon width=\"24px\" />\n                  </ArrowWrapper>\n                </ArrowContainer>\n              </AutoColumn>\n              <AutoColumn gap=\"md\" style={{ padding: '1rem 0' }}>\n                <ChainContainer>\n                  <AutoRow justify=\"center\">\n                    <Text color=\"textSubtle\">{t('To')}</Text>\n                  </AutoRow>\n                  <AutoRow justify=\"center\" style={{ padding: '0.5rem' }}>\n                    <img\n                      src={`images/networks/${IndexMap[destinationIndex]}.png`}\n                      alt={IndexMap[destinationIndex]}\n                      width={75}\n                    />\n                  </AutoRow>\n                  <AutoRow justify=\"center\">\n                    <FilterContainer>\n                      <LabelWrapper>\n                        <Select\n                          chainIndex={destinationIndex}\n                          options={[\n                            {\n                              label: 'Elastos',\n                              value: 'elastos',\n                            },\n                            {\n                              label: 'Ethereum',\n                              value: 'ethereum',\n                            },\n                            {\n                              label: 'Heco',\n                              value: 'heco',\n                            },\n                          ]}\n                          onChange={handleDestinationChange}\n                        />\n                      </LabelWrapper>\n                    </FilterContainer>\n                  </AutoRow>\n                </ChainContainer>\n              </AutoColumn>\n            </AutoRow>\n            <AutoColumn gap=\"md\">\n              <BridgeInputPanel\n                label={t('Token to bridge')}\n                origin={ChainMap[originIndex]}\n                destination={ChainMap[destinationIndex]}\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n            </AutoColumn>\n            {correctParams && (\n              <AutoColumn style={{ padding: '0.5rem 0.5rem 0 0.5rem' }}>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">{t('Min Bridge Amount')}</Text>\n                  <Text color=\"textSubtle\">\n                    {minTransfer.toLocaleString()} {symbol}\n                  </Text>\n                </Flex>\n                {/* <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">{t('Max Bridge Amount')}</Text>\n                  <Text color=\"textSubtle\">\n                    {bridgeParams.maxTx.toLocaleString()} {symbol}\n                  </Text>\n                </Flex> */}\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">\n                    {t('Fee')} ({feePercent}%)\n                  </Text>\n                  <Text color=\"textSubtle\">\n                    {feeAmount > 0 ? feeAmount.toLocaleString() : 0} {symbol}\n                  </Text>\n                </Flex>\n              </AutoColumn>\n            )}\n            <AutoColumn gap=\"md\" justify=\"center\" style={{ padding: '1rem 0 0 0' }}>\n              {!correctChain && (\n                <Warning>\n                  <Text color=\"failure\" mb=\"4px\">\n                    • {t('Please connect your wallet to the chain you wish to bridge from!')}\n                    {'  '}\n                    <Button scale=\"xs\" variant=\"danger\" onClick={() => switchNetwork(ChainMap[originIndex])}>\n                      {t('Click Here to Switch')}\n                    </Button>\n                  </Text>\n                </Warning>\n              )}\n              {correctParams && amountToBridge.lt(minTransfer) ? (\n                <Warning>\n                  <Text color=\"failure\" mb=\"4px\">\n                    • {t('Below minimum bridge amount')}\n                  </Text>\n                </Warning>\n              ) : (\n                exceedsMax && (\n                  <Warning>\n                    <Text color=\"failure\" mb=\"4px\">\n                      • {t('Insufficient balance')}\n                    </Text>\n                  </Warning>\n                )\n              )}\n              {correctParams && chainId === 1 && tokenToBridge.name !== 'ELA on Ethereum' && (\n                <Warning>\n                  <Text color=\"primary\" mb=\"4px\">\n                    {t(`Warning! Bridging assets back to Ethereum includes a fee (1-2%) to cover gas.`)}\n                  </Text>\n                </Warning>\n              )}\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : needsApproval && !approvalComplete ? (\n                <Button\n                  width=\"100%\"\n                  onClick={handleApprove}\n                  disabled={!isBridgeable}\n                  isLoading={requestedApproval}\n                  endIcon={requestedApproval ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\n                >\n                  {requestedApproval ? t('Approving') : t('Enable')}\n                </Button>\n              ) : (\n                <Button\n                  width=\"100%\"\n                  onClick={handleBridgeTransfer}\n                  disabled={!isBridgeable}\n                  isLoading={requestedBridgeTransfer}\n                  endIcon={requestedBridgeTransfer ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\n                >\n                  {requestedBridgeTransfer ? t('Bridging') : t('Bridge Token')}\n                </Button>\n              )}\n            </AutoColumn>\n            {isBridgeable && faucetAvailable && (\n              <AutoColumn gap=\"md\" justify=\"center\" style={{ padding: '1rem 0 0 0' }}>\n                <Emphasize>\n                  <Text mb=\"4px\">\n                    {t('Faucet available! As part of this transaction you will receive 0.01 ELA for use as gas on ESC')}\n                  </Text>\n                </Emphasize>\n              </AutoColumn>\n            )}\n          </Wrapper>\n        </Body>\n      </BridgePage>\n    </>\n  )\n}\n\nexport default Bridge\n","import { useCallback, useEffect, useState } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { getBep20Contract } from 'utils/contractHelpers'\n// import { useAppDispatch } from 'state'\n// import { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\n// import { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n// import { parseValue, fetchGasPrice } from \"../utils/txUtils\";\nimport { parseValue } from \"../utils/txUtils\";\nimport { foreignOrigin } from './useBridgeMediator';\n\nexport const useCheckMediatorApprovalStatus = (currency, request, amount, reverseBridgeParams) => {\n  // const [isMediatorApproved, setIsMediatorApproved] = useState(false)\n  const [needsApproval, setNeedsApproval] = useState(false)\n  const { account, library } = useWeb3React()\n  const { lastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const isToken = currency instanceof Token\n    if (!isToken) { setNeedsApproval(false); return }\n    if (request === undefined) { setNeedsApproval(false); return }\n    const tokenContract = getBep20Contract(currency.address, library.getSigner(account))\n    const mediator = foreignOrigin(currency.address, currency.chainId) ? reverseBridgeParams.contract : request.contract;\n\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await tokenContract.allowance(account, mediator)\n        const currentAllowance = new BigNumber(response.toString())\n        // console.log(currentAllowance.toString())\n        const value = new BigNumber(parseValue(amount, currency.decimals).toString())\n        // console.log(value.toString())\n        setNeedsApproval(!currentAllowance.gt(value))\n      } catch (error) {\n        setNeedsApproval(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [currency, request, library, account, lastUpdated, amount, reverseBridgeParams])\n\n  return needsApproval\n}\n\nexport const useApproveMediator = (currency, request, reverseBridgeParams) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [approvalComplete, setApprovalComplete] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  // const dispatch = useAppDispatch()\n  const { account, library } = useWeb3React()\n\n  const handleApprove = useCallback(async () => {\n    const isToken = currency instanceof Token\n    if (!isToken) { setRequestedApproval(false); return }\n    if (request === undefined) { setRequestedApproval(false); return }\n\n    const mediator = foreignOrigin(currency.address, currency.chainId) ? reverseBridgeParams.contract : request.contract;\n    const tokenContract = getBep20Contract(currency.address, library.getSigner(account))\n    // const response = (await tokenContract.allowance(account, mediator))\n    // const allowance = ethersToBigNumber(response)\n\n    try {\n      // if (!allowance.gt(0)) {\n        setRequestedApproval(true)\n        const tx = await tokenContract.approve(mediator, ethers.constants.MaxUint256)\n        const receipt = await tx.wait()\n        // dispatch(updateUserAllowance(sousId, account))\n        if (receipt.status) {\n          toastSuccess(\n            t('Contract Enabled'),\n            t('You can now bridge your %symbol%!', { symbol: currency.symbol }),\n          )\n          setRequestedApproval(false)\n          setApprovalComplete(true)\n        } else {\n          // user rejected tx or didn't go thru\n          toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n          setRequestedApproval(false)\n        }\n      // } else {\n        // setRequestedApproval(false)\n      // }\n    } catch (e) {\n      setRequestedApproval(false)\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [currency, account, library, request, t, toastError, toastSuccess, reverseBridgeParams])\n\n  return { handleApprove, requestedApproval, approvalComplete }\n}","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\nexport const BRIDGE_FAUCET_API = 'https://api.glidefinance.io'\n\nexport const INFO_CLIENT = 'https://api.glidefinance.io/subgraphs/name/glide/exchange'\nexport const BLOCKS_CLIENT = 'https://api.glidefinance.io/subgraphs/name/glide/blocks'\n// export const BLOCKS_CLIENT = 'https://elastos-graph.elk.finance/subgraphs/name/elkfinance/elastos-blocks'\n"],"sourceRoot":""}