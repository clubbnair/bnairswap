{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","utils/formatBalance.ts","config/constants/contracts.ts","utils/addressHelpers.ts","components/Layout/Row.tsx","state/mint/actions.ts","utils/bigNumber.ts","state/swap/actions.ts","config/constants/tokens.ts","components/Layout/Column.tsx","config/constants/multicall/index.ts","hooks/useContract.ts","utils/index.ts","config/constants/index.ts","utils/contractHelpers.ts","components/Balance.tsx","state/pools/hooks.ts","config/constants/types.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/bridge/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/info/index.ts","state/index.ts","config/index.ts","utils/multicall.ts","state/user/actions.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/user/hooks/index.tsx","utils/wrappedCurrency.ts","state/multicall/hooks.ts","hooks/useToast.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchDividendPoolPublic.ts","state/pools/fetchVaultUser.ts","state/pools/fetchDividendPoolUser.ts","state/pools/index.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","hooks/useTheme.ts","state/farms/hooks.ts","state/lists/hooks.ts","config/constants/lists.ts","state/bridge/actions.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","components/ConnectWalletButton.tsx","utils/providers.ts","hooks/useRefresh.ts","config/constants/pools.ts","views/Pools/helpers.tsx","config/constants/community.ts","state/wallet/hooks.ts","utils/compoundApyHelpers.ts","utils/calls/farms.ts","utils/calls/calculations.ts","utils/wallet.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","state/info/actions.ts","components/Card/index.tsx","config/localization/languages.ts","state/swap/hooks.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useDebounce.ts","hooks/usePairs.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","state/community/fetchPools.ts","state/community/fetchPoolsUser.ts","state/community/index.ts","hooks/useTokenBalance.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/uriToHttp.ts","hooks/useAuth.ts","hooks/usePersistState.ts","utils/currencyId.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","config/constants/swapWarningTokens.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/farms.ts","components/TransactionConfirmationModal/pngs/success.png","components/TransactionConfirmationModal/index.tsx","components/Layout/Page.tsx","state/block/hooks.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/GradientHeader.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","components/App/GradientBody.tsx","state/profile/index.tsx","config/constants/nfts.ts","state/profile/getProfile.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","utils/ENS/parseENSAddress.ts","utils/apr.ts","state/block/index.ts","hooks/useLastUpdated.ts","components/Tags.tsx","components/Loader/CircleLoader.tsx","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/web3React.ts","components/Loader/Dots.tsx","state/user/hooks/useUserAddedTokens.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","config/constants/teams.ts","state/pools/helpers.ts","state/community/helpers.ts","hooks/useWrapCallback.ts","components/Layout/Container.tsx","components/Menu/peak.png","components/Menu/SubNav.tsx","views/GradientPage.tsx","components/TokenImage/index.tsx","hooks/usePreviousValue.ts","components/Layout/Flex.tsx","components/Loading.tsx","components/ApyCalculatorModal/index.tsx","utils/maxAmountSpend.ts","components/PageHeader/PageHeader.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","utils/getRpcUrl.ts","state/application/actions.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","config/constants/priceHelperLps.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","config/constants/meta.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/PositionCard/index.tsx","utils/farmHelpers.ts","config/constants/networks.ts","hooks/useParsedQueryString.ts","components/Select/Select.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","routerHistory.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","state/teams/index.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","utils/getTimePeriods.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/ApprovalAction.tsx","views/Pools/components/DividendPoolCard/DividendStakeModal.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/StakeActions.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/HarvestActions.tsx","views/Pools/components/DividendPoolCard/DividendCardActions/index.tsx","views/Pools/components/DividendPoolCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Community/components/ToggleView/ToggleView.tsx","views/Pools/index.tsx","views/Community/helpers.tsx","views/Community/components/PoolCard/AprRow.tsx","views/Community/components/PoolCard/StyledCard.tsx","views/Community/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Community/components/PoolCard/CardFooter/index.tsx","views/Community/components/PoolCard/StyledCardHeader.tsx","views/Community/hooks/useApprove.ts","views/Community/components/PoolCard/CardActions/ApprovalAction.tsx","views/Community/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Community/components/PoolCard/Modals/PercentageButton.tsx","views/Community/hooks/useStakePool.ts","views/Community/hooks/useUnstakePool.ts","views/Community/components/PoolCard/Modals/StakeModal.tsx","views/Community/components/PoolCard/CardActions/StakeActions.tsx","views/Community/hooks/useHarvestPool.ts","views/Community/components/PoolCard/Modals/CollectModal.tsx","views/Community/components/PoolCard/CardActions/HarvestActions.tsx","views/Community/components/PoolCard/CardActions/index.tsx","views/Community/components/PoolCard/index.tsx","views/Community/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Community/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Community/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Community/components/CakeVaultCard/FeeSummary.tsx","views/Community/components/CakeVaultCard/VaultStakeModal.tsx","views/Community/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Community/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Community/components/CakeVaultCard/VaultCardActions/index.tsx","views/Community/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Community/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Community/components/CakeVaultCard/index.tsx","views/Community/components/DividendPoolCard/DividendCardActions/ApprovalAction.tsx","views/Community/components/DividendPoolCard/DividendStakeModal.tsx","views/Community/components/DividendPoolCard/DividendCardActions/StakeActions.tsx","views/Community/components/DividendPoolCard/DividendCardActions/HarvestActions.tsx","views/Community/components/DividendPoolCard/DividendCardActions/index.tsx","views/Community/components/DividendPoolCard/index.tsx","views/Community/components/PoolTabButtons.tsx","views/Community/index.tsx","state/community/hooks.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","getDecimalAmount","amount","decimals","BigNumber","times","BIG_TEN","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","getAddress","address","ChainId","MAINNET","getCakeAddress","tokens","glide","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wela","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getDividendPoolAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getFarmAuctionAddress","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","BIG_ZERO","BIG_ONE","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","CLUBBNAIR","Token","USDC","WELA","symbol","projectLink","sugar","ela","eth","usdc","ht","husd","filda","rinu","rinuLP","finu","finuLP","beer","beerLP","sloth","slothLP","bun","bunLP","Column","ColumnCenter","AutoColumn","MULTICALL_NETWORKS","TESTNET","HECO","ETHEREUM","useERC20","useMemo","getBep20Contract","getSigner","useCake","getCakeContract","useMasterchef","getMasterchefContract","useCommunityChef","id","getCommunityContract","useSousChef","getSouschefContract","useCakeVaultContract","getCakeVaultContract","useContract","ABI","withSignerIfPossible","account","getContract","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","from","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","AddressZero","Contract","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","VALIDATOR_TIMEOUT","BLOCKED_ADDRESSES","APPROVE_BALANCE_ADDRESSES","abi","signer","signerOrProvider","ethers","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getNativeSourceMediator","AMB_NATIVE_ERC_ABI","getTokenSourceMediator","MULTI_AMB_ERC_ERC_ABI","getErc677Contract","ERC677_ABI","config","communityConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","poolsConfig","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","cakeVaultAbi","getDividendPoolContract","dividendPoolAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useFetchPublicPoolsData","dispatch","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","useSelector","pools","userDataLoaded","map","transformPool","usePoolsPublicData","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","glideAtLastUserActionAsString","glideAtLastUserAction","lastDepositedTime","lastUserActionTime","useFetchDividendPool","farms","fetchDividendPoolPublicData","fetchDividendPoolUserData","useDividendPool","dividendPool","totalStakedAsString","totalStaked","startBlock","apr","stakingTokenPrice","earningTokenPrice","allowanceAsString","allowance","stakingTokenBalanceAsString","stakingTokenBalance","stakedBalanceAsString","stakedBalance","pendingRewardAsString","pendingReward","PoolIds","NftType","LotteryStatus","AuctionStatus","createReducer","builder","addCase","updateBlockNumber","action","payload","Math","max","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","pairs","timestamp","audioPlay","isDark","userFarmStakedOnly","FarmStakedOnly","ON_FINISHED","watchlistTokens","watchlistPools","lastUpdateVersionTimestamp","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserSingleHopOnly","addSerializedToken","serializedToken","removeSerializedToken","addSerializedPair","serializedPair","token0","token1","removeSerializedPair","tokenAAddress","tokenBAddress","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","addWatchlistToken","tokenWatchlist","includes","newTokens","filter","x","addWatchlistPool","poolsWatchlist","newPools","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","concat","UNSUPPORTED_LIST_URLS","reduce","memo","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","calls","blocksPerFetch","listeners","callListeners","call","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","protocol","overview","chartData","byAddress","updateProtocolData","protocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","PERSISTED_KEYS","store","configureStore","devTools","reducer","block","blockReducer","farmsReducer","poolsReducer","community","communityReducer","info","infoReducer","application","user","swap","bridge","mint","burn","multicall","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useDispatch","EXPONENTIAL_AT","DECIMAL_PLACES","ESC_BLOCK_TIME","CLUBBNAIR_PER_BLOCK","BLOCKS_PER_YEAR","CLUBBNAIR_START_BLOCK","CLUBBNAIR_BONUS_PERIOD","CLUBBNAIR_REDUCTION_PERIOD","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","multi","itf","utils","Interface","calldata","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","token","tokenMap_","useAllTokens","useCombinedActiveList","useBridgeableTokens","origin","destination","useBridgeTokenMap","useBridgeableTokenList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","isBNB","toUpperCase","useIsExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","toggleThemeAction","useUserSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","useUserFarmStakedOnly","isActive","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","useUserTransactionTTL","deadline","useAddUserToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","usePairAdder","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","userPairs","forChain","pairId","deserializeToken","combinedList","keyed","sorted","sortsBefore","useWatchlistTokens","useWatchlistPools","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","isMethodArg","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","inputs","callData","useBlockNumber","useMultipleContractSingleData","useToast","toastContext","ToastsContext","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","endBlock","toJSON","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","isFinished","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingGlide","fetchPublicVaultData","method","sharePrice","shares","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","convertSharesToCake","cakeAsBigNumber","fetchVaultFees","dividendPoolContract","fetchDividendPoolData","remainingReward","rewardsPerBlock","poolInfo","currentDepositAmount","priceFarm","f","pid","quoteToken","usdcPrice","getPoolApr","cakeVaultContract","fetchVaultUser","userContractResponse","glideContract","fetchDividendPoolUser","glideAllowance","balanceOf","glideBalance","glideStaked","glidePending","currentBlock","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","Number","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","publicDividendPoolInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","useTokenAllowance","ApprovalState","owner","spender","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","isApproveBalanceToken","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","useApproveCallbackFromTrade","trade","allowedSlippage","computeSlippageAdjustedAmounts","useTheme","theme","StyledThemeContext","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","useFarms","useFarmFromPid","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","useUsdcPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbUsdc","bnbUsdcFarm","usePriceCakeUsdc","cakePriceUsdcAsString","sortByListPriority","urlA","urlB","first","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","BRIDGE_TOKEN_LIST","destinationMatch","UNSUPPORTED_TOKEN_LIST","useIsListActive","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","split","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","RPC_URL","getRpcUrl","providers","JsonRpcProvider","RefreshContext","fast","slow","CORE","harvest","sortOrder","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsDisplayBalance","convertCakeToShares","cake","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","isHighValueToken","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","farmSymbol","pairToken","COMMUNITY","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","stakeFarm","enterStaking","wait","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","phase","rewardPerPhase","phaseNumber","getGlidesPerYear","rewardSum","totalBlocks","lt","iterationBlocks","plus","currentPhase","nextBlockBorder","iterationPhase","blocksForReward","getGlideCurrentEmissions","setupNetwork","window","ethereum","BRIDGE_NETWORKS","request","registerToken","tokenSymbol","tokenDecimals","image","tokenAdded","useAllTransactions","isTransactionRecent","allTransactions","Card","colors","background","LightCard","LightGreyCard","cardBorder","GreyCard","dropdown","code","languageList","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","fetchFarmUserAllowances","farmsToFetch","masterChefAddress","lpAddresses","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","masterchefABI","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmConfig","farmsWithPriceHelpers","priceHelperLpsConfig","fetchFarms","fetchFarmsPrices","farmsWithPrices","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","getTokenLogoURL","StyledLogo","chain","uriLocations","fetchCommunityPublicDataAsync","communityFarms","setCommunityPublicData","fetchCommunityStakingLimitsAsync","fetchCommunityUserDataAsync","setCommunityUserData","CommunitySlice","updateCommunityUserData","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","fetchBalance","useDevBalance","useTreasuryBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","isZero","hexNumberString","fetch","json","getItem","uriToHttp","uri","substr","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","profileClear","walletconnect","close","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","SwapWarningTokens","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","src","GliderSuccessImage","height","external","href","isMetaMask","variant","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","justifyContent","pt","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","StyledPage","Container","mediaQueries","sm","lg","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","DEFAULT_META","description","pageTitle","join","property","Page","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","mb","scale","Transactions","useModal","onPresentTransactionsModal","GradientHeaderContainer","Flex","GradientHeader","subtitle","helper","backTo","noConfig","alignItems","mr","as","Link","show","GlobalSettings","BodyWrapper","AppBody","PANCAKE","identifierKey","MIXIE","REACT_APP_API_PROFILE","isInitialized","hasRegistered","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profile","profileFetchFailed","addPoints","points","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","parseENSAddress","contentHashUri","translatedUri","contenthashToUri","ensPath","isLast","ok","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ensAddress","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolWeight","glidePriceUsd","poolLiquidityUsd","farmAddress","glideRewardsApr","glideRewardsAprAsNumber","lpRewardsApr","lpAprs","toLocaleLowerCase","blockSlice","initialBlock","setStateLastUpdated","previousLastUpdated","usePreviousValue","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserslippageTolerance","ttl","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","onBack","maxWidth","checked","userSelect","prompt","SettingsModal","showConfirmExpertModal","rememberExpertModeAcknowledgement","setSingleHopOnly","textTransform","TransactionSettings","onPresentSettingsModal","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","event","nextUserInput","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","ConnectorNames","Injected","WalletConnect","getLibrary","Web3Provider","Dots","span","serializedTokensMap","profileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","users","getTeams","teamsById","team","numberTeams","nbTeams","teamData","onChainTeamData","teams","images","md","ipfs","textColor","transformUserData","quoteTokenAddress","WrapType","NOT_APPLICABLE","wrapType","useWrapCallback","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","px","mx","StyledNav","nav","StyledButtonMenu","ButtonMenu","Glider","Nav","location","activeIndex","xs","GradientPage","SubNav","flexGrow","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","FlexLayout","Loading","Grid","GridItem","GridHeaderItem","BulletList","ul","ApyCalculatorModal","linkLabel","displayApr","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","maxAmountSpend","greaterThan","Outer","gradients","bubblegum","Inner","PageHeader","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","nodes","sample","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","priceHelperLps","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","disabled","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","totalAllocPoint","allocPoint","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceUsdc","hasTokenPriceVsQuote","quoteTokenInUsdc","getFarmQuoteTokenPrice","baseTokenPrice","quoteTokenPrice","ens","resolvedContentHash","useENSContentHash","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","FixedHeightRow","StyledFlex","StyledColumn","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","FullPositionCard","marginBottom","role","NETWORK_URLS","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","parseArrays","ignoreQueryPrefix","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","backgroundAlt","StyledModalHeader","ModalHeader","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","resolve","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","useEagerConnect","connectorId","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","showOnMobile","hideSubNav","showOnDesktop","DropdownMenuItemType","PRICE","DIVIDER","SOCIALS","EXTERNAL_LINK","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","position","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","body","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","lte","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","Menu","elaPriceUsd","userMenu","globalMenu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","PageLoader","createBrowserHistory","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","radii","StyledCardHeader","isCakePool","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","ApprovalAction","stakingTokenContract","endIcon","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","floor","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","isStaking","CardFooter","VaultApprovalAction","useVaultApprove","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceUsdc","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","isVaultApproved","setIsVaultApproved","checkApprovalStatus","useCheckVaultApprovalStatus","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","DividendStakeModal","DividendCardActions","DividendPoolCard","isDividendPool","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","viewMode","setViewMode","useRouteMatch","isExact","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","CardLayout","PoolControls","ConnectContainer","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","chosenPoolsLength","accountHasVaultShares","accountHasDividendPoolStake","cakePool","cakeAutoVault","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","cardLayout","StyledText","FilterContainer","LabelWrapper","ControlStretch","Community","sortOption","setSortOption","fetchCommunityPublicData","useFetchPublicCommunityData","poolsToSort","sortPools","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","safemoon","component","bondly","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","Bridge","Info","NotFound","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","ThemeProviderWrapper","dark","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc2ddd81.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@glide-finance/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","export default {\n  masterChef: {\n    20: '0x588D5eFd2BD93Aa3DB61aE3C4C172bbf0B4C7feB',\n  },\n  swapRewardsChef: {\n    20: '0x80f2cF7059336b44a75F00451B81f8d742DD2b94',\n  },\n  cakeVault: {\n    20: '0x063c1462A8A24a6B692B53eB38849CD6F6539b98',\n  },\n  sousChef: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  lotteryV2: {\n    20: '0x9999999999999999999999999999999999999999', // avoid ENS errors\n  },\n  multiCall: { // Multicall2\n    20: '0x0555fcE4231A25AcB648284bfecf6B85e1AF6Bd4',\n    128: '0x0555fcE4231A25AcB648284bfecf6B85e1AF6Bd4',\n    1: '0x0555fcE4231A25AcB648284bfecf6B85e1AF6Bd4'\n  },\n  pancakeProfile: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  pancakeRabbits: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnyFactory: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  claimRefund: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  pointCenterIfo: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnySpecial: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  tradingCompetition: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  easterNft: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  predictions: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  chainlinkOracle: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnySpecialCakeVault: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  bunnySpecialPrediction: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n  farmAuction: {\n    20: '0x9999999999999999999999999999999999999999',\n  },\n}\n","import { ChainId } from '@glide-finance/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.glide.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wela.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getDividendPoolAddress = () => {\n  return getAddress(addresses.swapRewardsChef)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import styled from 'styled-components'\nimport { Box } from '@glide-finance/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { ChainId, Token } from '@glide-finance/sdk'\n\nexport const CLUBBNAIR: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xa73853f4B75165d8cb864187276ef794F8C52b37',\n    18,\n    'CLUBBNAIR',\n    'Glide',\n  )\n}\n\nexport const USDC: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xA06be0F5950781cE28D965E5EFc6996e88a8C141',\n    6,\n    'USDC',\n    'USD Coin',\n  )\n}\n\nexport const WELA = new Token(ChainId.MAINNET, '0x517E9e5d46C1EA8aB6f78677d6114Ef47F71f6c4', 18, 'WELA', 'Wrapped ELA')\n\nconst tokens = {\n  glide: {\n    symbol: 'CLUBBNAIR',\n    address: {\n      20: '0xa73853f4B75165d8cb864187276ef794F8C52b37'\n    },\n    decimals: 18,\n    projectLink: 'https://defi.bnair.org/',\n  },\n  sugar: {\n    symbol: 'SUGAR',\n    address: {\n      20: '0x1213962Ad05759CA373791C7Ee3ab637A8Bd9A72'\n    },\n    decimals: 18,\n    projectLink: 'https://defi.bnair.org/',\n  },\n  wela: {\n    symbol: 'wELA',\n    address: {\n      20: '0x517E9e5d46C1EA8aB6f78677d6114Ef47F71f6c4'\n    },\n    decimals: 18,\n    projectLink: 'https://elastos.org/',\n  },\n  ela: {\n    symbol: 'ELA',\n    address: {\n      20: '0x517E9e5d46C1EA8aB6f78677d6114Ef47F71f6c4'\n    },\n    decimals: 18,\n    projectLink: 'https://elastos.org/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      20: '0x802c3e839E4fDb10aF583E3E759239ec7703501e'\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      20: '0xA06be0F5950781cE28D965E5EFc6996e88a8C141'\n    },\n    decimals: 6,\n    projectLink: 'https://www.circle.com/en/usdc',\n  },\n  ht: {\n    symbol: 'HT',\n    address: {\n      20: '0xeceefC50f9aAcF0795586Ed90a8b9E24f55Ce3F3'\n    },\n    decimals: 18,\n    projectLink: 'https://www.huobi.com/',\n  },\n  husd: {\n    symbol: 'HUSD',\n    address: {\n      20: '0xF9Ca2eA3b1024c0DB31adB224B407441bECC18BB'\n    },\n    decimals: 8,\n    projectLink: 'https://www.hecochain.com/',\n  },\n  filda: {\n    symbol: 'FILDA',\n    address: {\n      20: '0xB9Ae03e3320235D3a8AE537f87FF8529b445B590'\n    },\n    decimals: 18,\n    projectLink: 'https://filda.io/',\n  },\n  // Meme zone\n  rinu: {\n    symbol: 'RINU',\n    address: {\n      20: '0x0b0148b82631A1ce18c83048471716d591726977'\n    },\n    decimals: 9,\n    projectLink: '',\n  },\n  rinuLP: {\n    symbol: 'RINU-ELA LP',\n    address: {\n      20: '0x411DA456D450111648310c5Ec3D188755727b92c'\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  finu: {\n    symbol: 'FINU',\n    address: {\n      20: '0x18521074aBA94FA730d06aAe000778Dcc8C6059d'\n    },\n    decimals: 9,\n    projectLink: '',\n  },\n  finuLP: {\n    symbol: 'FINU-ELA LP',\n    address: {\n      20: '0xe8134F4e731Bb9a70Ddc0013755994B4906d480f'\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  beer: {\n    symbol: 'BEER',\n    address: {\n      20: '0x44F57DF34e7873191f5aF7065B8348dD581c34DC'\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  beerLP: {\n    symbol: 'BEER-ELA LP',\n    address: {\n      20: '0xbcA320f6b57b422a7Bf98A5bFaf8635923998d41'\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  sloth: {\n    symbol: 'SLOTH',\n    address: {\n      20: '0xA70Efd687EADFb738389e0739a26fb9036D99A1E'\n    },\n    decimals: 18,\n    projectLink: 'https://www.slothtoken.club/',\n  },\n  slothLP: {\n    symbol: 'SLOTH-ELA LP',\n    address: {\n      20: '0x3DCe3e9C2DBe687ab1794E89e48ad0947c4ae48F'\n    },\n    decimals: 18,\n    projectLink: 'https://www.slothtoken.club/',\n  },\n  bun: {\n    symbol: 'BUN',\n    address: {\n      20: '0x63B2dcd421d2E9168EC79e880fB0D2D45d539A66'\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypunk.online/',\n  },\n  bunLP: {\n    symbol: 'BUN-ELA LP',\n    address: {\n      20: '0xb454FC9F6681dCa0D7C3b7a170A89B8bD7bdA71A'\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypunk.online/',\n  },\n}\n\nexport default tokens\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId } from '@glide-finance/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x20205D3b6008bea1411bd4CaEA2D923FE231B6E5', // 0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n  [ChainId.HECO]: '0xc9a9F768ebD123A00B52e7A0E590df2e9E998707',\n  [ChainId.ETHEREUM]: '0xeefBa1e63905eF1D7ACbA5a8513c70307C1cE441'\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getCommunityContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getDividendPoolContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@glide-finance/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useCommunityChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCommunityContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useDividendPoolContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getDividendPoolContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@glide-finance/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@glide-finance/sdk'\nimport { USDC, CLUBBNAIR, WELA } from './tokens'\n\nexport const ROUTER_ADDRESS = '0xec2f2b94465Ee0a7436beB4E38FC8Cf631ECf7DF'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CLUBBNAIR[ChainId.MAINNET], USDC[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CLUBBNAIR[ChainId.TESTNET], USDC[ChainId.TESTNET]],\n  [ChainId.HECO]: [],\n  [ChainId.ETHEREUM]: []\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], USDC[ChainId.MAINNET], CLUBBNAIR[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CLUBBNAIR[ChainId.TESTNET], USDC[ChainId.TESTNET]],\n  [ChainId.HECO]: [],\n  [ChainId.ETHEREUM]: []\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], USDC[ChainId.MAINNET], CLUBBNAIR[ChainId.MAINNET]],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CLUBBNAIR[ChainId.TESTNET], USDC[ChainId.TESTNET]],\n  [ChainId.HECO]: [],\n  [ChainId.ETHEREUM]: []\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CLUBBNAIR[ChainId.MAINNET], WELA],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\nexport const VALIDATOR_TIMEOUT = 300000 // Milliseconds\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n]\n\nexport const APPROVE_BALANCE_ADDRESSES: string[] = [\n  \"0xaA9691BcE68ee83De7B518DfCBBfb62C04B1C0BA\", // Gold\n  \"0x44F57DF34e7873191f5aF7065B8348dD581c34DC\" // Beer\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as communityConfig } from './community'\nexport { default as ifosConfig } from './ifo'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig, communityConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getDividendPoolAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport AMB_NATIVE_ERC_ABI from 'config/abi/AMB_NATIVE_ERC_ABI.json';\nimport MULTI_AMB_ERC_ERC_ABI from 'config/abi/MULTI_AMB_ERC_ERC_ABI.json';\nimport ERC677_ABI from 'config/abi/ERC677_ABI.json';\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport dividendPoolAbi from 'config/abi/dividendPool.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getNativeSourceMediator = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(AMB_NATIVE_ERC_ABI, address, signer);\n}\nexport const getTokenSourceMediator = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MULTI_AMB_ERC_ERC_ABI, address, signer);\n}\nexport const getErc677Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ERC677_ABI, address, signer);\n}\nexport const getCommunityContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = communityConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\nexport const getDividendPoolContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(dividendPoolAbi, getDividendPoolAddress(), signer)\n}\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@glide-finance/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\n// import { getDividendPoolContract, getCakeContract } from 'utils/contractHelpers'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n  fetchDividendPoolPublicData,\n  fetchDividendPoolUserData\n} from '.'\nimport { State, Pool } from '../types'\n// import { transformPool, getTokenPricesFromFarm } from './helpers'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolsPublicData = (): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n  }, [dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      glideAtLastUserAction: glideAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const glideAtLastUserAction = useMemo(() => {\n    return new BigNumber(glideAtLastUserActionAsString)\n  }, [glideAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      glideAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n\n\n\n\nexport const useFetchDividendPool = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  const { farms } = useSelector((state: State) => ({\n    farms: state.farms.data,\n  }))\n\n  useEffect(() => {\n    dispatch(fetchDividendPoolPublicData({ farms }))\n  }, [dispatch, fastRefresh, farms])\n\n  useEffect(() => {\n    dispatch(fetchDividendPoolUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n}\n\n// export const fetchDividendPoolData = async () => {\n//   const glideContract = getCakeContract()\n//   const dividendPoolContract = getDividendPoolContract()\n//   // const blockLimits = await fetchPoolsBlockLimits()\n//   const totalStaked = (await dividendPoolContract.poolInfo(0)).currentDepositAmount.toString()\n//   const startBlock = (await dividendPoolContract.startBlock()).toString()\n\n//   const prices = getTokenPricesFromFarm(getState().farms.data)\n\n//   const apr = 222\n//   const stakingTokenPrice = 0.1\n//   const earningTokenPrice = 3\n//   return {\n//     totalStaked,\n//     startBlock,\n//     apr,\n//     stakingTokenPrice,\n//     earningTokenPrice\n//   }\n// }\n\nexport const useDividendPool = () => {\n  const {\n    totalStaked: totalStakedAsString,\n    startBlock,\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    userData: {\n      isLoading,\n      allowance: allowanceAsString,\n      stakingTokenBalance: stakingTokenBalanceAsString,\n      stakedBalance: stakedBalanceAsString,\n      pendingReward: pendingRewardAsString\n    },\n  } = useSelector((state: State) => state.pools.dividendPool)\n\n  const totalStaked = useMemo(() => {\n    return new BigNumber(totalStakedAsString)\n  }, [totalStakedAsString])\n\n  const allowance = useMemo(() => {\n    return new BigNumber(allowanceAsString)\n  }, [allowanceAsString])\n\n  const stakingTokenBalance = useMemo(() => {\n    return new BigNumber(stakingTokenBalanceAsString)\n  }, [stakingTokenBalanceAsString])\n\n  const stakedBalance = useMemo(() => {\n    return new BigNumber(stakedBalanceAsString)\n  }, [stakedBalanceAsString])\n\n  const pendingReward = useMemo(() => {\n    return new BigNumber(pendingRewardAsString)\n  }, [pendingRewardAsString])\n\n  // const userShares = useMemo(() => {\n  //   return new BigNumber(userSharesAsString)\n  // }, [userSharesAsString])\n\n  // const glideAtLastUserAction = useMemo(() => {\n  //   return new BigNumber(glideAtLastUserActionAsString)\n  // }, [glideAtLastUserActionAsString])\n//\n  return {\n    totalStaked,\n    startBlock,\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    userData: {\n      isLoading,\n      allowance,\n      stakingTokenBalance,\n      stakedBalance,\n      pendingReward\n    },\n  }\n}","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56?: string\n  20?: string\n  1?: string\n  128?: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  usdcPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface CommunityConfig {\n  sousId: number\n  farmSymbol?: string\n  farmPID?: number\n  earningToken: Token\n  stakingToken: Token\n  pairToken?: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock?: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock?: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface BridgeConfig {\n  mediator: string\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n    // console.log(state.blockNumber[chainId])\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport communityReducer from './community'\n// import bridgeReducer from './bridge'\n// import predictionsReducer from './predictions'\n// import profileReducer from './profile'\n// import teamsReducer from './teams'\n// import achievementsReducer from './achievements'\nimport blockReducer from './block'\n// import collectiblesReducer from './collectibles'\n// import votingReducer from './voting'\n// import lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport bridge from './bridge/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport infoReducer from './info'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    // achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    community: communityReducer,\n    info: infoReducer,\n    // predictions: predictionsReducer,\n    // profile: profileReducer,\n    // teams: teamsReducer,\n    // collectibles: collectiblesReducer,\n    // voting: votingReducer,\n    // lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    bridge,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId } from '@glide-finance/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const ESC_BLOCK_TIME = 5\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://esc.elastos.io',\n  [ChainId.TESTNET]: 'https://eth-testnet.elastos.io',\n}\n\nexport const CLUBBNAIR_PER_BLOCK = new BigNumber(3)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / ESC_BLOCK_TIME) * 60 * 24 * 365) // 6307200\n// export const CLUBBNAIR_PER_YEAR = CLUBBNAIR_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const CLUBBNAIR_START_BLOCK = new BigNumber(9255555);\nexport const CLUBBNAIR_BONUS_PERIOD = new BigNumber(1572480);\nexport const CLUBBNAIR_REDUCTION_PERIOD = new BigNumber(3144960);\nexport const BASE_URL = 'https://defi.bnair.org'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 300000\nexport const DEFAULT_GAS_PRICE = 1\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')","import { Currency } from '@glide-finance/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n  useBridgeableTokenList\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useBridgeTokenMap(tokenMap: TokenAddressMap, origin: number): { [address: string]: Token } {\n  return useMemo(() => {\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[origin]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[origin][address].token\n      return newMap\n    }, {})\n\n    return mapWithoutUrls\n  }, [tokenMap, origin])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useBridgeableTokens(origin, destination): { [address: string]: Token } {\n  const bridgeableTokens = useBridgeableTokenList(origin, destination)\n  return useBridgeTokenMap(bridgeableTokens, origin)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'ELA'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Pair, Token } from '@glide-finance/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Glide-LP', 'Glide LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@glide-finance/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n  // console.log('block number', latestBlockNumber)\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0 && p.sousId !== 1)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'ELA')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'ELA' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'ELA')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0 && p.sousId !== 1)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingGlide('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestGlideRewards',\n      'calculateTotalPendingGlideRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { multicallv2 } from 'utils/multicall'\nimport dividendPoolAbi from 'config/abi/dividendPool.json'\nimport { getDividendPoolAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\n// import { BIG_ZERO } from 'utils/bigNumber'\nimport { getPoolApr } from 'utils/apr'\nimport { getDividendPoolContract } from 'utils/contractHelpers'\n\nconst dividendPoolContract = getDividendPoolContract()\n\n// Hardcoded for stake CLUBBNAIR, earn ELA (PID 1)\nexport const fetchDividendPoolData = async (farms) => {\n  try {\n  const calls = [\n      'remainingRewards',\n      'rewardsPerBlock',\n      'startBlock'\n    ].map((method) => ({\n      address: getDividendPoolAddress(),\n      name: method,\n  }))\n  const [[remainingReward], [rewardsPerBlock], [startBlock]] = await multicallv2(dividendPoolAbi, calls)\n  const totalStaked = (await dividendPoolContract.poolInfo(0)).currentDepositAmount\n  const priceFarm = farms.find((f) => f.pid === 1)\n  const { decimals } = priceFarm.quoteToken\n  const earningTokenPrice = priceFarm.quoteToken.usdcPrice\n  const stakingTokenPrice = priceFarm.token.usdcPrice\n  const apr = getPoolApr(stakingTokenPrice, earningTokenPrice, getBalanceNumber(new BigNumber(totalStaked.toString()), \n  decimals), rewardsPerBlock.toString()/(10**decimals))\n\n  return {\n    totalStaked: totalStaked.toString(),\n    startBlock: startBlock.toString(),\n    apr,\n    stakingTokenPrice,\n    earningTokenPrice,\n    remainingReward: remainingReward.toString()\n  }\n  } catch (error) {\n    return {\n      totalStaked: null,\n      startBlock: null,\n      apr: null,\n      stakingTokenPrice: null,\n      earningTokenPrice: null,\n      remainingReward: null\n    }\n  }\n}\n\nexport default fetchDividendPoolData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      glideAtLastUserAction: new BigNumber(userContractResponse.glideAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      glideAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","// import BigNumber from 'bignumber.js'\n// import { getCakeVaultContract } from 'utils/contractHelpers'\nimport { getDividendPoolContract, getCakeContract } from 'utils/contractHelpers'\n\n// const cakeVaultContract = getCakeVaultContract()\nconst dividendPoolContract = getDividendPoolContract()\nconst glideContract = getCakeContract()\n\nconst fetchDividendPoolUser = async (account: string) => {\n  try {\n    const glideAllowance = (await glideContract.allowance(account, dividendPoolContract.address)).toString()\n    const glideBalance = (await glideContract.balanceOf(account)).toString()\n    const glideStaked = (await dividendPoolContract.userInfo(account))[0].toString()\n    const glidePending = (await dividendPoolContract.pendingRewards(account)).toString()\n\n    return {\n      isLoading: false,\n      allowance: glideAllowance,\n      stakingTokenBalance: glideBalance,\n      stakedBalance: glideStaked,\n      pendingReward: glidePending,\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      stakedBalance: null,\n      pendingReward: null,\n    }\n  }\n  //   return {\n  //     isLoading: false,\n  //     userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n  //     lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n  //     lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n  //     glideAtLastUserAction: new BigNumber(userContractResponse.glideAtLastUserAction.toString()).toJSON(),\n  //   }\n  // } catch (error) {\n  //   return {\n  //     isLoading: true,\n  //     userShares: null,\n  //     lastDepositedTime: null,\n  //     lastUserActionTime: null,\n  //     glideAtLastUserAction: null,\n  //   }\n  // }\n}\n\nexport default fetchDividendPoolUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk, DividendUser, DividendPool } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport { fetchDividendPoolData } from './fetchDividendPoolPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport fetchDividendPoolUser from './fetchDividendPoolUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      glideAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n  dividendPool: {\n    totalStaked: null,\n    startBlock: null,\n    apr: null,\n    stakingTokenPrice: null,\n    earningTokenPrice: null,\n    userData: {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      stakedBalance: null,\n      pendingReward: null\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchDividendPoolPublicData = createAsyncThunk<DividendPool, { farms }>('dividendPool/fetchPublicData', async ({ farms }) => {\n  const publicDividendPoolInfo = await fetchDividendPoolData(farms)\n  return publicDividendPoolInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const fetchDividendPoolUserData = createAsyncThunk<DividendUser, { account: string }>(\n  'dividendPool/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchDividendPoolUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n    // Dividend pool public data that updates frequently\n    builder.addCase(fetchDividendPoolPublicData.fulfilled, (state, action: PayloadAction<DividendPool>) => {\n      state.dividendPool = { ...state.dividendPool, ...action.payload }\n    })\n    // Dividend pool user data\n    builder.addCase(fetchDividendPoolUserData.fulfilled, (state, action: PayloadAction<DividendUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.dividendPool = { ...state.dividendPool, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { Token, TokenAmount } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@glide-finance/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS, APPROVE_BALANCE_ADDRESSES } from 'config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const isApproveBalanceToken = APPROVE_BALANCE_ADDRESSES.includes(token?.address)\n    useExact = isApproveBalanceToken;\n\n    // const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n    //   // general fallback for tokens who restrict approval amounts\n    //   useExact = true\n    //   return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    // })\n\n    const estimatedGas = useExact ? await tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString()) : await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = USDC-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useUsdcPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.usdcPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useUsdcPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the USDC hook in /hooks\n\nexport const usePriceBnbUsdc = (): BigNumber => {\n  const bnbUsdcFarm = useFarmFromPid(2)\n  return new BigNumber(bnbUsdcFarm.quoteToken.usdcPrice)\n}\n\nexport const usePriceCakeUsdc = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceUsdcAsString = cakeBnbFarm.token.usdcPrice\n\n  const cakePriceUsdc = useMemo(() => {\n    return new BigNumber(cakePriceUsdcAsString)\n  }, [cakePriceUsdcAsString])\n\n  return cakePriceUsdc\n}\n","import { ChainId, Token } from '@glide-finance/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/glide-default.tokenlist.json'\nimport BRIDGE_TOKEN_LIST from '../../config/constants/tokenLists/glide-bridge.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/glide-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n  [ChainId.HECO]: {},\n  [ChainId.ETHEREUM]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n    [ChainId.HECO]: { ...map1[ChainId.HECO], ...map2[ChainId.HECO] },\n    [ChainId.ETHEREUM]: { ...map1[ChainId.ETHEREUM], ...map2[ChainId.ETHEREUM] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\nexport function useBridgeableTokenList(origin, destination): TokenAddressMap {\n  const allTokens = {...BRIDGE_TOKEN_LIST}\n  const bridgeableSet = allTokens.tokens.filter(token => token.chainId === origin)\n  let destinationMatch = bridgeableSet.filter(token => token.origin === destination || token.origin === token.chainId)\n  if (origin === 20 && destination === 1) { // filter Glide from Ethereum bridge\n    destinationMatch = destinationMatch.filter(token => token.address !== \"0xa73853f4B75165d8cb864187276ef794F8C52b37\")\n  }\n  allTokens.tokens = destinationMatch\n  const bridgeableTokens = allTokens\n  return listToTokenMap(bridgeableTokens)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","// const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\n// const PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  // PANCAKE_TOP100,\n  // PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('bridge/selectCurrency')\nexport const switchCurrencies = createAction<void>('bridge/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('bridge/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('bridge/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('bridge/setRecipient')\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@glide-finance/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@glide-finance/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import React from 'react'\nimport { Button, useWalletModal } from '@glide-finance/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.glide,\n    earningToken: tokens.glide,\n    contractAddress: {\n      20: '0x588D5eFd2BD93Aa3DB61aE3C4C172bbf0B4C7feB'\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4875',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 1,\n    stakingToken: tokens.glide,\n    earningToken: tokens.ela,\n    contractAddress: {\n      20: '0x80f2cF7059336b44a75F00451B81f8d742DD2b94'\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  // {\n  //   sousId: 1000,\n  //   stakingToken: tokens.fildaLP,\n  //   earningToken: tokens.filda,\n  //   contractAddress: {\n  //     20: '0xC31494725feab0094fB0504746Ec6A1c36080d47',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0000000000000001',\n  // },\n  // {\n  //   sousId: 210,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.pots,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0868',\n  // },\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  glideAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && glideAtLastUserAction && glideAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(glideAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import tokens from './tokens'\nimport { CommunityConfig, PoolCategory } from './types'\n\nconst community: CommunityConfig[] = [\n  { // total 15552000000000 over 1555200 blocks\n    sousId: 1000,\n    farmSymbol: \"RINU-ELA LP\",\n    stakingToken: tokens.rinuLP,\n    earningToken: tokens.rinu,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0xbe62625c219390800A0de75f45C773Ef8bB9F950',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10000000',\n  },\n  { // total 15552000000000 over 1555200 blocks\n    sousId: 1001,\n    farmSymbol: \"FINU-ELA LP\",\n    stakingToken: tokens.finuLP,\n    earningToken: tokens.finu,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0x7c5D6163e5cD8F8dd71e2597f671B18D9a22AF08',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10000000',\n  },\n  { // total 1555200 over 1555200 blocks\n    sousId: 1002,\n    farmSymbol: \"BEER-ELA LP\",\n    stakingToken: tokens.beerLP,\n    earningToken: tokens.beer,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0xD20cA396942870b0afE59508270FD2F9af863Eeb',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1',\n  },\n  { // total 20000000000000 over 518400 blocks\n    sousId: 1003,\n    farmSymbol: \"SLOTH-ELA LP\",\n    stakingToken: tokens.slothLP,\n    earningToken: tokens.sloth,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0x981465427f6946F4E1A6fa4CC15408695559768d',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '38580246',\n  },\n  { // total 2100000000000000000000 over 518400 blocks\n    sousId: 1004,\n    farmSymbol: \"BUN-ELA LP\",\n    stakingToken: tokens.bunLP,\n    earningToken: tokens.bun,\n    pairToken: tokens.wela,\n    contractAddress: {\n      20: '0x9A8433315B104ea2211e71Cf167AA8dDFBAF1C16',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n]\n\nexport default community\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CLUBBNAIR_START_BLOCK, CLUBBNAIR_BONUS_PERIOD, CLUBBNAIR_REDUCTION_PERIOD, CLUBBNAIR_PER_BLOCK } from 'config'\n\n// Calculate phase\nfunction phase(blockNumber: BigNumber) {\n  // Issue here if connected to another chain with a different block height. Calculates based on that height. Hardcoded for now.\n\n  if (blockNumber.gte(CLUBBNAIR_START_BLOCK)) {\n  //     // Calculate block number from start block\n  //     const blockNumberFromStart = blockNumber.minus(CLUBBNAIR_START_BLOCK); \n  //     // If blockNumberFromStart less then block for reduction period, then we are in one phase\n  //     if (blockNumberFromStart.lte(CLUBBNAIR_BONUS_PERIOD)) { \n  //         return 1;\n  //     } \n  //     // Calculate phase and add 1, because, will be start from one, and one phase is bonus phase \n  //     return ((blockNumberFromStart.minus(CLUBBNAIR_BONUS_PERIOD).minus(new BigNumber(1))).idiv(CLUBBNAIR_REDUCTION_PERIOD).plus(new BigNumber(2))).toNumber();\n  }\n  return 1;\n}\n\n// Get Glide token reward per block\nfunction rewardPerPhase(phaseNumber: number) {\n  // If larger than 25, it would be overflow error (also, in first 25 phase we will distribute all tokens)\n  if (phaseNumber === 0 || phaseNumber > 25) {\n      return new BigNumber(0);\n  } if (phaseNumber === 1) {\n      return CLUBBNAIR_PER_BLOCK;\n  }\n  const rwrd = CLUBBNAIR_PER_BLOCK.multipliedBy(75).div(100).multipliedBy(85 ** (phaseNumber - 2)).div(100 ** (phaseNumber - 2));\n  return rwrd;\n}\n\n/**\n * Returns the total number of glide per year\n */\nexport const getGlidesPerYear = (currentBlock: BigNumber) => {\n  // Reward sum\n  let rewardSum = new BigNumber(0);\n  let totalBlocks = BLOCKS_PER_YEAR;\n  if (currentBlock.lt(CLUBBNAIR_START_BLOCK)) {\n    totalBlocks = totalBlocks.minus(CLUBBNAIR_START_BLOCK.minus(currentBlock));\n  }\n  let iterationBlocks = CLUBBNAIR_START_BLOCK.plus(1);\n  const currentPhase = phase(currentBlock);\n\n  // Calculate reward sum\n  while(totalBlocks.gt(0)) {\n    let nextBlockBorder;\n    const iterationPhase = phase(iterationBlocks);\n    if (iterationPhase === 1) {\n      nextBlockBorder = CLUBBNAIR_BONUS_PERIOD;\n    } else {\n      nextBlockBorder = CLUBBNAIR_REDUCTION_PERIOD;\n    }\n    \n    // If loop is same or after current block phase\n    if (currentPhase > 0 && iterationPhase >= currentPhase) {\n      let blocksForReward;\n      if (iterationPhase === currentPhase) {\n        blocksForReward = iterationBlocks.minus(currentBlock);\n      } else if (iterationPhase > currentPhase) {\n        blocksForReward = nextBlockBorder;\n      }\n      // Calculate rewards for current loop phase\n      blocksForReward = (totalBlocks.minus(blocksForReward).gt(0)) ? blocksForReward : totalBlocks;\n      // Calculate reward sum before and for current loop phase\n      rewardSum = rewardSum.plus(rewardPerPhase(iterationPhase).multipliedBy(new BigNumber(blocksForReward)));\n      totalBlocks = totalBlocks.minus(blocksForReward);\n    }\n    iterationBlocks = iterationBlocks.plus(nextBlockBorder);\n  }\n  return rewardSum;\n}\n\n/*\n* Returns the glide current emission\n*/\nexport const getGlideCurrentEmissions = (currentBlock: BigNumber) => {\n  const currentPhase = phase(currentBlock);\n  return rewardPerPhase(currentPhase);\n}","// Set of helper functions to facilitate wallet setup\nimport { BASE_URL } from 'config'\nimport { BRIDGE_NETWORKS } from 'config/constants/networks'\nimport { Web3Provider } from '@ethersproject/providers'\n// import useActiveWeb3React from '../hooks/useActiveWeb3React'\n// import { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add esc as a network on Metamask, or switch to eSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async (chainId: number, library?: Web3Provider) => {\n  const provider = library ? library.provider : window.ethereum\n  if (provider) {\n    // const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    const params = BRIDGE_NETWORKS[chainId]\n    try {\n      if (chainId === 1 ) {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\"chainId\": '0x1'}],\n        })\n      } else {\n        await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: [params],\n        })\n      }\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@glide-finance/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import styled from 'styled-components'\nimport { Box } from '@glide-finance/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { Language } from '@glide-finance/uikit'\n\n// export const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\n// export const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\n// export const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\n// export const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\n// export const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\n// export const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\n// export const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\n// export const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\n// export const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\n// export const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\n// export const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\n// export const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\n// export const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\n// export const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\n// export const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\n// export const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\n// export const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\n// export const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\n// export const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\n// export const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\n// export const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\n// export const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\n// export const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\n// export const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\n// export const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\n// export const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'en-US': EN,\n  'zh-CN': ZHCN\n}\n\nexport const languageList = Object.values(languages)\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@glide-finance/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'ELA' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'ELA') return 'ELA'\n    if (valid === false) return 'ELA'\n  }\n  return 'ELA' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingGlide',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // popsicle\n    // Filter out price helper LP config farms\n    // const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n    //   return farm.pid || farm.pid === 0\n    // })\n\n    // return farmsWithoutHelperLps\n    return farmsWithPrices\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { TokenAmount, Pair, Currency } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","const getTokenLogoURL = (address: string) =>\n  // `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n  `/images/tokens/${address}.svg`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@glide-finance/sdk'\nimport { ElastosIcon, EthereumIcon, HecoIcon } from '@glide-finance/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n  chain\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n  chain?: number\n}) {\n  // console.log(currency)\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    if (chain) {\n    switch (chain) {\n      case 1: return <EthereumIcon width={size} style={style} />\n      case 20: return <ElastosIcon width={size} style={style} />\n      case 128: return <HecoIcon width={size} style={style} />\n      default: return <ElastosIcon width={size} style={style} />\n    }\n    } else {\n      return <ElastosIcon width={size} style={style} />\n    }\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import BigNumber from 'bignumber.js'\nimport communityConfig from 'config/constants/community'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = communityConfig.filter((p) => p.sousId !== 0 && p.sousId !== 1)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = communityConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\n  const bnbPool = communityConfig.filter((p) => p.stakingToken.symbol === 'ELA')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = communityConfig\n    .filter((p) => p.stakingToken.symbol !== 'ELA' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import communityConfig from 'config/constants/community'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = communityConfig.filter((p) => p.stakingToken.symbol !== 'ELA')\nconst bnbPools = communityConfig.filter((p) => p.stakingToken.symbol === 'ELA')\nconst nonMasterPools = communityConfig.filter((p) => p.sousId !== 0 && p.sousId !== 1)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingGlide('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport communityConfig from 'config/constants/community'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { CommunityState, Pool, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber, getBalanceAmount } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport fetchFarms from '../farms/fetchFarms'\nimport fetchFarmsPrices from '../farms/fetchFarmsPrices'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: CommunityState = {\n  data: [...communityConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      glideAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n  dividendPool: {\n    totalStaked: null,\n    startBlock: null,\n    apr: null,\n    stakingTokenPrice: null,\n    earningTokenPrice: null,\n    userData: {\n      isLoading: true,\n      allowance: null,\n      stakingTokenBalance: null,\n      stakedBalance: null,\n      pendingReward: null\n    },\n  },\n}\n\n// Thunks\nexport const fetchCommunityPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n  const farms = getState().farms.data\n  const farmsWithPriceHelpers = farms.concat(priceHelperLpsConfig)\n  const communityFarms = await fetchFarms(farmsWithPriceHelpers)\n  const farmsWithPrices = await fetchFarmsPrices(communityFarms)\n  const prices = getTokenPricesFromFarm(farmsWithPrices)\n\n  const liveData = communityConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const { farmSymbol } = pool\n    // const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const farm = farmsWithPrices.find((f) => f.lpSymbol === farmSymbol)\n    const farmTokenPriceInUsd = new BigNumber(farm.token.usdcPrice)\n    let lpTokenPrice = BIG_ZERO\n    if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n      // Total value of base token in LP\n      const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n      // Double it to get overall value in LP\n      const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n      // Divide total value of all tokens, by the number of LP tokens\n      const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n      lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n    }\n\n    const stakingTokenPrice = Number(lpTokenPrice.toFixed(18))\n    // const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setCommunityPublicData(liveData))\n}\n\nexport const fetchCommunityStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = communityConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setCommunityPublicData(stakingLimitData))\n}\n\nexport const fetchCommunityUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = communityConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setCommunityUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updateCommunityUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const CommunitySlice = createSlice({\n  name: 'Community',\n  initialState,\n  reducers: {\n    setCommunityPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setCommunityUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updateCommunityUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  }\n})\n\n// Actions\nexport const { setCommunityPublicData, setCommunityUserData, updateCommunityUserData } = CommunitySlice.actions\n\nexport default CommunitySlice.reducer\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useDevBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe511F61Ab96818579f995a4Db356caf3e9A00fFf')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useTreasuryBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xFF998bF6F25e6b3dBdFedBecfC02B1e97a4FDb3c')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'glide_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@glide-finance/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n              const hasSetup = await setupNetwork(20) // specify network to switch to\n              if (hasSetup) {\n                activate(connector)\n              }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { Currency, ETHER, Token } from '@glide-finance/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'ELA'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@glide-finance/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","// import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\n// const { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  // safemoon,\n  // bondly,\n}\n\nexport default SwapWarningTokens\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@glide-finance/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@glide-finance/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 1, 2) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CLUBBNAIR',\n    lpAddresses: {\n      20: '0xa73853f4B75165d8cb864187276ef794F8C52b37'\n    },\n    token: tokens.sugar,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'CLUBBNAIR-ELA LP',\n    lpAddresses: {\n      20: '0xbeeAAb15628329C2C89Bc9F403d34b31fbCb3085'\n    },\n    token: tokens.glide,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'USDC-ELA LP', \n    lpAddresses: {\n      20: '0x6077b7990d3d0dfB5A50f1D207f67ac5955B999d'\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ETH-ELA LP',\n    lpAddresses: {\n      20: '0xa86883c2405f4557D2242Df47b220C54d0D611e4'\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'HUSD-USDC LP',\n    lpAddresses: {\n      20: '0xB0917F2595A2c4C56498f6da2C52690a3EF558D2'\n    },\n    token: tokens.husd,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'HT-ELA LP',\n    lpAddresses: {\n      20: '0xC6734784EE598855200dABC8D8B1fA1F11f14C90'\n    },\n    token: tokens.ht,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'FILDA-ELA LP',\n    lpAddresses: {\n      20: '0x5B0Cf7D3b2D6885e1173674f4649B914e7A66B96'\n    },\n    token: tokens.filda,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'CLUBBNAIR-USDC LP',\n    lpAddresses: {\n      20: '0x26aCE9c9da938fb2Db91B0d0E7703861c249bf08'\n    },\n    token: tokens.glide,\n    quoteToken: tokens.usdc,\n  }\n]\n\nexport default farms\n","export default __webpack_public_path__ + \"static/media/success.854f5e1c.png\";","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@glide-finance/sdk'\nimport styled from 'styled-components'\nimport {\n  Image,\n  Button,\n  Text,\n  ErrorIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  ButterflyLoader,\n  Modal,\n  InjectedModalProps,\n} from '@glide-finance/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\nimport GliderSuccessImage from './pngs/success.png'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 12px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 12px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <ButterflyLoader />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          {/* <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" /> */}\n          <Image src={GliderSuccessImage} alt=\"Submitted\" width={200} height={200} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on explorer')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport Container from './Container'\n\n// const StyledPage = styled(Container)`\n//   min-height: 100vh;\n//   padding-top: 16px;\n//   padding-bottom: 16px;\n\n//   ${({ theme }) => theme.mediaQueries.sm} {\n//     padding-top: 24px;\n//     padding-bottom: 24px;\n//   }\n\n//   ${({ theme }) => theme.mediaQueries.lg} {\n//     padding-top: 32px;\n//     padding-bottom: 32px;\n//   }\n// `\n\nconst StyledPage = styled(Container)`\n  min-height: 100vh;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeUsdc()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\n// import { simpleRpcProvider } from 'utils/providers'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const { library } = useActiveWeb3React()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      // const blockNumber = await simpleRpcProvider.getBlockNumber()\n      const blockNumber = await library.getBlockNumber()\n      // console.log('blocknumber', blockNumber)\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, library])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@glide-finance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('Clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@glide-finance/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, GradientHeading, IconButton, ArrowBackIcon, NotificationDot } from '@glide-finance/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst GradientHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background: linear-gradient(139.73deg, #191919 0%, #191919 100%);\n`\n\nconst GradientHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <GradientHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <GradientHeading as=\"h1\" mb=\"8px\" color=\"glide\" scale=\"lg\">\n            {title}\n          </GradientHeading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"16px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </GradientHeaderContainer>\n  )\n}\n\nexport default GradientHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@glide-finance/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const GradientWrapper = styled(Card)`\n  background: linear-gradient(180deg, rgb(17, 28, 59) 0%, rgb(9, 13, 30) 100%);\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\nexport default function GradientBody({ children }: { children: React.ReactNode }) {\n  return <GradientWrapper>{children}</GradientWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@glide-finance/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\nimport {getGlidesPerYear} from 'utils/calls'\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param glidePriceUsd Glide price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  glidePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n  currentBlock: number,\n): { glideRewardsApr: number; lpRewardsApr: number } => {\n  if (currentBlock > 0) {\n  const glidesPerYear = getGlidesPerYear(new BigNumber(currentBlock)).times(65).times(75).div(10000);\n  const yearlyGlideRewardAllocation = glidesPerYear.times(poolWeight)\n  const glideRewardsApr = yearlyGlideRewardAllocation.times(glidePriceUsd).div(poolLiquidityUsd).times(100)\n  let glideRewardsAprAsNumber = null\n  if (!glideRewardsApr.isNaN() && glideRewardsApr.isFinite()) {\n    glideRewardsAprAsNumber = glideRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { glideRewardsApr: glideRewardsAprAsNumber, lpRewardsApr }\n  } return { glideRewardsApr: 0, lpRewardsApr: 0 }\n}\n\nexport default null\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserslippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? '\t#d11576' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? '\t#d11576' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@glide-finance/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn on Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React, { useState } from 'react'\n// import styled from 'styled-components'\nimport { Text, Toggle, Flex, Modal, InjectedModalProps } from '@glide-finance/uikit'\nimport { useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\n// const PancakeToggleWrapper = styled.div`\n//   .pancakes {\n//     position: absolute;\n//   }\n// `\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'glide_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  // const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '380px' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n        </Flex>\n        <TransactionSettings />\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        {/* <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex> */}\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@glide-finance/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@glide-finance/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@glide-finance/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@glide-finance/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background: linear-gradient(250deg, #17264f 0%, hsl(220, 51%, 23%) 100%);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@glide-finance/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [1, 20, 128] })\n\n// console.log(injected)\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://walletconnect.elastos.net/v2',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@glide-finance/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@glide-finance/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.usdcPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.usdcPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.usdcPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.usdcPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} ELA to WELA` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient ELA balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WELA to ELA` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WELA balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@glide-finance/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","export default __webpack_public_path__ + \"static/media/peak.fb8d134c.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Flex } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport GliderSuccessImage from './peak.png'\n\nconst StyledNav = styled.nav`\n  align-self: center;\n  margin-bottom: 20px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 0;\n    margin-left: 20px;\n  }\n`\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  border: none;\n`\n\nconst Glider = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity') ||\n    pathname.includes('/bridge')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <Flex flexDirection={['row', null, null, 'row']}>\n      <Glider>\n        <img src={GliderSuccessImage} alt=\"Submitted\" width=\"80px\" height=\"71px\" />\n      </Glider>\n      <StyledNav>\n        <StyledButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n            {t('Swap')}\n          </ButtonMenuItem>\n          <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n            {t('Liquidity')}\n          </ButtonMenuItem>\n        </StyledButtonMenu>\n      </StyledNav>\n    </Flex>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@glide-finance/uikit'\n// import Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n// import { useTranslation } from 'contexts/Localization'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: 100vh;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 10vh;\n    min-height: 100vh;\n    background: radial-gradient(40% 55% at 45% 57.5%, #d97645 0%, rgba(242, 173, 108, 0.4) 25%, rgba(6, 9, 20, 0) 72.5%),\n      radial-gradient(40% 45% at 55% 47.5%, #48b9ff 0%, rgba(72, 185, 255, 0.4) 25%, rgba(6, 9, 20, 0) 72.5%);\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n    background-position-y: -8vh;\n  }\n`\n// const LaunchWarning = styled(Flex)`\n//   border: 1px solid ${({ theme }) => theme.colors.primary};\n//   border-radius: 16px;\n//   margin-bottom: 20px;\n//   padding: 16px;\n//   max-width: 436px;\n//   width: 100%;\n// `\n\nconst GradientPage: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  // const { t } = useTranslation()\n\n  return (\n    <StyledPage {...props}>\n      {/* <LaunchWarning>\n        <Text bold color=\"primary\">\n          {t(\n            'The CLUBBNAIR supply is limited due to fair launch! Volatility will be high for a few days. Play safe!',\n          )}\n        </Text>\n      </LaunchWarning> */}\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      {/* <Footer /> */}\n    </StyledPage>\n  )\n}\n\nexport default GradientPage\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@glide-finance/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'ELA' ? tokens.wela.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CLUBBNAIR',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          {/* <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex> */}\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.05% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { CurrencyAmount, ETHER, JSBI } from '@glide-finance/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@glide-finance/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n  border-radius: 24px;\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  // {\n  //   pid: null,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n  //   },\n  //   token: tokens.usdc,\n  //   quoteToken: tokens.wbnb,\n  // },\n  {\n    pid: null,\n    lpSymbol: 'RINU-ELA LP',\n    lpAddresses: {\n      20: '0x411DA456D450111648310c5Ec3D188755727b92c'\n    },\n    token: tokens.rinu,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'FINU-ELA LP',\n    lpAddresses: {\n      20: '0xe8134F4e731Bb9a70Ddc0013755994B4906d480f'\n    },\n    token: tokens.finu,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'BEER-ELA LP',\n    lpAddresses: {\n      20: '0xbcA320f6b57b422a7Bf98A5bFaf8635923998d41'\n    },\n    token: tokens.beer,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'SLOTH-ELA LP',\n    lpAddresses: {\n      20: '0x3DCe3e9C2DBe687ab1794E89e48ad0947c4ae48F'\n    },\n    token: tokens.sloth,\n    quoteToken: tokens.wela,\n  },\n  {\n    pid: null,\n    lpSymbol: 'BUN-ELA LP',\n    lpAddresses: {\n      20: '0xb454FC9F6681dCa0D7C3b7a170A89B8bD7bdA71A'\n    },\n    token: tokens.bun,\n    quoteToken: tokens.wela,\n  },\n]\n\nexport default priceHelperLps\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@glide-finance/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@glide-finance/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@glide-finance/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@glide-finance/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create an ERC-20 token on ESC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on explorer')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['USDC', 'wELA']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceUsdc: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'USDC') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wELA') {\n    return hasTokenPriceVsQuote ? bnbPriceUsdc.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for USDC/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't USDC or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - USDC price\n  if (quoteTokenFarm.quoteToken.symbol === 'wELA') {\n    const quoteTokenInUsdc = bnbPriceUsdc.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInUsdc\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInUsdc)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDC') {\n    const quoteTokenInUsdc = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInUsdc\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInUsdc)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed USDC/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceUsdc: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'USDC') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wELA') {\n    return bnbPriceUsdc\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wELA') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceUsdc.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDC') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbUsdcFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceUsdc = bnbUsdcFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbUsdcFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceUsdc)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceUsdc)\n    const token = { ...farm.token, usdcPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, usdcPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'BNAIR SWAP',\n  description:\n    'The first incentivized AMM on ESC! Earn CLUBBNAIR through yield farming, then stake it in pools to earn more tokens!',\n  image: 'https://defi.bnair.org/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('BNAIR SWAP')}`,\n      }\n    // case '/competition':\n    //   return {\n    //     title: `${t('Trading Battle')} | ${t('BNAIR SWAP')}`,\n    //   }\n    // case '/prediction':\n    //   return {\n    //     title: `${t('Prediction')} | ${t('BNAIR SWAP')}`,\n    //   }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('BNAIR SWAP')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Stake')} | ${t('BNAIR SWAP')}`,\n      }\n    case '/community':\n      return {\n        title: `${t('Community')} | ${t('BNAIR SWAP')}`,\n    }\n    // case '/lottery':\n    //   return {\n    //     title: `${t('Lottery')} | ${t('BNAIR SWAP')}`,\n    //   }\n    // case '/collectibles':\n    //   return {\n    //     title: `${t('Collectibles')} | ${t('BNAIR SWAP')}`,\n    //   }\n    // case '/ifo':\n    //   return {\n    //     title: `${t('Initial Farm Offering')} | ${t('BNAIR SWAP')}`,\n    //   }\n    // case '/teams':\n    //   return {\n    //     title: `${t('Leaderboard')} | ${t('BNAIR SWAP')}`,\n    //   }\n    // case '/profile/tasks':\n    //   return {\n    //     title: `${t('Task Center')} | ${t('BNAIR SWAP')}`,\n    //   }\n    // case '/profile':\n    //   return {\n    //     title: `${t('Your Profile')} | ${t('BNAIR SWAP')}`,\n    //   }\n    default:\n      return null\n  }\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@glide-finance/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@glide-finance/sdk'\nimport React from 'react'\nimport { Button, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@glide-finance/sdk'\nimport React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@glide-finance/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@glide-finance/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { GradientHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport GradientPage from '../GradientPage'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'ELA'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <GradientPage>\n      <AppBody>\n        <GradientHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Create LP tokens')}\n          // helper={t(\n          //   'Liquidity providers earn a 0.05% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          // )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </GradientPage>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@glide-finance/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@glide-finance/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\n// const StyledCard = styled(Card)`\n//   border-radius: 12px;\n// `\n\nconst StyledFlex = styled(Flex)`\n  background: linear-gradient(250deg, #17264f 0%, hsl(220, 51%, 23%) 100%);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\nconst StyledColumn = styled(AutoColumn)`\n  background: linear-gradient(250deg, #17264f 0%, hsl(220, 51%, 23%) 100%);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  \n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            {t(\n              \"By adding liquidity you'll earn 0.05% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ ...props }: PositionCardProps) {\n  const { pair } = props;\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ marginBottom: '12px' }}>\n      <StyledFlex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>{t('Loading')}</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </StyledFlex>\n\n      {showMore && (\n        <StyledColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled')} {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                {t('Pooled')} {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">{t('Share of pool')}</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                {t('Remove')}\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                {t('Add liquidity instead')}\n              </Button>\n            </Flex>\n          )}\n        </StyledColumn>\n      )}\n    </Card>\n  )\n}\n","const ARCHIVED_FARMS_START_PID = 1000\nconst ARCHIVED_FARMS_END_PID = 2500\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { ChainId } from '@glide-finance/sdk'\n\nconst NETWORK_URLS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: 'https://escrpc.elaphant.app', // https://api.elastos.io/eth\n  [ChainId.TESTNET]: 'https://api-testnet.elastos.io/eth',\n  [ChainId.HECO]: 'https://http-mainnet.hecochain.com',\n  [ChainId.ETHEREUM]: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_KEY}`\n}\n\nexport const BRIDGE_NETWORKS = {\n  20: {\n            chainId: `0x14`,\n            chainName: 'Elastos Smart Contract Chain',\n            nativeCurrency: {\n              name: 'ELA',\n              symbol: 'ela',\n              decimals: 18,\n            },\n            rpcUrls: ['https://escrpc.elaphant.app', 'https://api.elastos.io/eth', 'https://api.trinity-tech.cn/eth'],\n            blockExplorerUrls: ['https://esc.elastios.io'],\n  },\n  1: {\n            chainId: `0x1`,\n            chainName: 'Ethereum Mainnet',\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'eth',\n              decimals: 18,\n            },\n            rpcUrls: [`https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_KEY}`],\n            blockExplorerUrls: ['https://etherscan.io'],\n  },\n  128: {\n            chainId: `0x80`,\n            chainName: 'Huobi ECO Chain',\n            nativeCurrency: {\n              name: 'HT',\n              symbol: 'ht',\n              decimals: 18,\n            },\n            rpcUrls: ['https://http-mainnet.hecochain.com', 'https://http-mainnet-node.huobichain.com'],\n            blockExplorerUrls: ['https://hecoinfo.com'],\n  }\n}\n\nexport default NETWORK_URLS\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@glide-finance/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@glide-finance/sdk'\nimport { Text } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n  \n// border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border-radius: 10px;\n  display: flex;\n  padding: 8px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>ELA</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@glide-finance/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@glide-finance/sdk'\nimport { Text } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 28px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@glide-finance/sdk'\nimport { Text, Input, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\n// import { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\n// const swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  // const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'el' || s === 'ela'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      // if (audioPlay) {\n      //   swapSound.play()\n      // }\n    },\n    [onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'ela') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@glide-finance/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@glide-finance/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {t('If you purchase a token from this list, you may not be able to sell it back.')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@glide-finance/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\nconst StyledModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <StyledModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </StyledModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        // return prev\n        return { chainId, blockNumber }\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      // .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n// import { simpleRpcProvider } from 'utils/providers'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\n// import { usePollBlockNumber } from '../block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  // usePollBlockNumber()\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  const { chainId } = useActiveWeb3React()\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@glide-finance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on explorer\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@glide-finance/uikit'\nimport useAuth from 'hooks/useAuth'\n\n// const _binanceChainListener = async () =>\n//   new Promise<void>((resolve) =>\n//     Object.defineProperty(window, 'BinanceChain', {\n//       get() {\n//         return this.bsc\n//       },\n//       set(bsc) {\n//         this.bsc = bsc\n\n//         resolve()\n//       },\n//     }),\n//   )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@glide-finance/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\n// background-color: ${({ theme }) => theme.colors.background};\n\n// const GlobalStyle = createGlobalStyle`\n//   * {\n//     font-family: 'Kanit', sans-serif;\n//   }\n//   body {\n//     position: fixed;\n//     inset: 0px;\n//     background-size: cover;\n//     background-repeat: no-repeat;\n//     background-image: url('/images/background-dark-1.png');\n\n//     img {\n//       height: auto;\n//       max-width: 100%;\n//     }\n//   }\n// `\n\n// const GlobalStyle = createGlobalStyle`\n//   * {\n//     font-family: 'Kanit', sans-serif;\n//   }\n//   body {\n//     position: fixed;\n//     inset: 0px;\n//     background-size: cover;\n//     background-repeat: no-repeat;\n//     background-image: url('/images/background-dark.png');\n\n//     img {\n//       height: auto;\n//       max-width: 100%;\n//     }\n//   }\n// `\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Nunito', sans-serif;\n  }\n  body {\n    background-color: #0c0c0c;\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { ContextApi } from 'contexts/Localization/types'\nimport { MenuItemsType, DropdownMenuItemType } from '@glide-finance/uikit'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'Home',\n    href: '/',\n    showItemsOnMobile: false,\n    showOnMobile: false\n  },\n  {\n    label: t('Trade'),\n    icon: 'Trade',\n    href: '/swap',\n    showItemsOnMobile: false\n  },\n  {\n    label: t('Farm'),\n    icon: 'Farm',\n    href: '/farms',\n    showItemsOnMobile: false\n  },\n  {\n    label: t('Stake'),\n    icon: 'Pool',\n    href: '/pools',\n    showItemsOnMobile: false\n  },\n  {\n    label: t('Community'),\n    icon: 'Community',\n    href: '/community',\n    showItemsOnMobile: false,\n    showOnMobile: false\n  },\n  {\n    label: t('Bridge'),\n    icon: 'Bridge',\n    href: '/bridge',\n    showItemsOnMobile: false\n  },\n  {\n    label: t('Analytics'),\n    icon: 'Analytics',\n    href: '/info',\n    showItemsOnMobile: false\n  },\n  {\n    label: '',\n    href: '/info',\n    icon: 'More',\n    hideSubNav: true,\n    showOnDesktop: false,\n    items: [\n      {\n        type: DropdownMenuItemType.PRICE,\n      },\n      {\n        type: DropdownMenuItemType.DIVIDER,\n      },\n      {\n        type: DropdownMenuItemType.SOCIALS,\n      },\n      {\n        type: DropdownMenuItemType.DIVIDER,\n      },\n      {\n        label: t('Docs & Help'),\n        href: 'https://docs.glidefinance.io',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n      {\n        label: t('Community'),\n        icon: 'Pool',\n        href: '/community',\n        showItemsOnMobile: false\n      },\n      // {\n      //   label: t('Blog'),\n      //   href: 'https://medium.com/glide-finance',\n      //   type: DropdownMenuItemType.EXTERNAL_LINK,\n      // }\n    ],\n  },\n]\n\nexport default config\n\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\n// background: linear-gradient(\n//   to right,\n//   ${({ theme }) => theme.colors.background}00,\n//   ${({ theme }) => theme.colors.background}E6\n// );\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@glide-finance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('ELA Balance Low')}</Text>\n            <Text as=\"p\">{t('You need ELA for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('ELA Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('CLUBBNAIR Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on explorer')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@glide-finance/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@glide-finance/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@glide-finance/uikit'\nimport useAuth from 'hooks/useAuth'\n// import { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\n// import ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  // const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  // const hasProfile = isInitialized && !!profile\n  // const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    // <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n    <UIKitUserMenu account={account}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      {/* <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} /> */}\n      {/* <UserMenuDivider /> */}\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@glide-finance/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeUsdc, usePriceBnbUsdc } from 'state/farms/hooks'\n// import { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const glidePriceUsd = usePriceCakeUsdc()\n  const elaPriceUsd = usePriceBnbUsdc()\n  // const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      glidePriceUsd={glidePriceUsd.toNumber()}\n      elaPriceUsd={elaPriceUsd.toNumber()}\n      links={config(t)}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButterflyLoader } from '@glide-finance/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <ButterflyLoader />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CLUBBNAIR is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@glide-finance/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      {/* <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex> */}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@glide-finance/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automatically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@glide-finance/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.glide.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isDividendPool?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CLUBBNAIR' && stakingToken.symbol === 'CLUBBNAIR'\n  // const background = isStaking ? 'bubblegum' : 'cardHeader'\n  const background = 'bubblegum'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Stake CLUBBNAIR, earn CLUBBNAIR')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CLUBBNAIR' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\n// import styled from 'styled-components'\nimport { Modal, Text, Button } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\n// const StyledLink = styled(Link)`\n//   width: 100%;\n// `\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      {/* <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink> */}\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@glide-finance/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CLUBBNAIR into pool.')}</Text>\n      <Text>{t('Harvest: collect CLUBBNAIR and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        disabled={chainId !== 20}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@glide-finance/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    // <StyledCard\n    //   isFinished={isFinished && sousId !== 0}\n    //   ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    // >\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          style={{ marginTop: '10px' }}\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new CLUBBNAIR in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 7 days')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new CLUBBNAIR in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const usdValueStaked =\n    cakePriceUsdc.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceUsdc).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your tokens have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceUsdc.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const stakedDollarValue = cakePriceUsdc.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceUsdc), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceUsdc.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CLUBBNAIR\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@glide-finance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { glideAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    glideAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceUsdc.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CLUBBNAIR profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.glide}\n        stakingToken={tokens.glide}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useDividendPool } from 'state/pools/hooks'\n// import { useDividendPoolContract } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from '../PoolCard/Modals/PercentageButton'\nimport useStakePool from '../../hooks/useStakePool'\nimport useUnstakePool from '../../hooks/useUnstakePool'\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst DividendStakeModal: React.FC<StakeModalProps> = ({ isBnbPool, pool, isRemovingStake = false, onDismiss }) => {\n  // const dividendPoolContract = useDividendPoolContract()\n  const {\n    stakingTokenPrice,\n    userData: { stakingTokenBalance },\n  } = useDividendPool()\n  const { chainId } = useActiveWeb3React()\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || chainId !== 20}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default DividendStakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport DividendStakeModal from '../DividendStakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} />)\n  const [onPresentUnstake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} isRemovingStake />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst DividendCardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, earningTokenPrice, userData } = pool\n  // Pools using native ELA behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default DividendCardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useDividendPool } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\n// import VaultCardActions from './VaultCardActions'\nimport DividendCardActions from './DividendCardActions'\n// import UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n// import RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface DividendPoolProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst DividendPoolCard: React.FC<DividendPoolProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { isLoading, allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  } = useDividendPool()\n\n  const dividendPool = {\n    ...pool,\n    userData: { allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  }\n\n  const accountHasSharesStaked = stakedBalance && stakedBalance.gt(0)\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isDividendPool\n        earningToken={tokens.ela}\n        stakingToken={tokens.glide}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={dividendPool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            // <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            <DividendCardActions pool={dividendPool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={dividendPool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default DividendPoolCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n// import ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  // const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {/* {viewModeToggle} */}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@glide-finance/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account, chainId } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceUsdc)\n  }, [cakePriceUsdc, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('CLUBBNAIR has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CLUBBNAIR\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CLUBBNAIR\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee || chainId !== 20}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceUsdc)\n  }, [cakePriceUsdc, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CLUBBNAIR Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CLUBBNAIR pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Compound Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee || chainId !== 20}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@glide-finance/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, GradientHeading, Flex, Text, Button } from '@glide-finance/uikit'\n// import orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchCakeVault,\n  useFetchDividendPool,\n  useCakeVault,\n  useDividendPool,\n} from 'state/pools/hooks'\n// import tokens from 'config/constants/tokens'\nimport { usePollFarmsData } from 'state/farms/hooks'\n// import { latinise } from 'utils/latinise'\nimport { setupNetwork } from 'utils/wallet'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\n// import SearchInput from 'components/SearchInput'\n// import { OptionProps } from 'components/Select/Select'\n// import { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport DividendPoolCard from './components/DividendPoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\n// import HelpButton from './components/HelpButton'\n// import PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\n// import { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\n// const FilterContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   width: 100%;\n//   padding: 8px 0px;\n\n//   ${({ theme }) => theme.mediaQueries.sm} {\n//     width: auto;\n//     padding: 0;\n//   }\n// `\n\n// const LabelWrapper = styled.div`\n//   > ${Text} {\n//     font-size: 12px;\n//   }\n// `\n\n// const ControlStretch = styled(Flex)`\n//   > div {\n//     flex: 1;\n//   }\n// `\n\nconst ConnectContainer = styled(Flex)`\n  margin-bottom: 15px;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account, chainId, library } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'glide_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'glide_pool_view' })\n  // const [searchQuery, setSearchQuery] = useState('')\n  // const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    // userData: { glideAtLastUserAction, userShares },\n    userData: { userShares },\n    // fees: { performanceFee },\n    // pricePerFullShare,\n    // totalCakeInVault,\n  } = useCakeVault()\n  const {\n    userData: { stakedBalance },\n  } = useDividendPool()\n\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const accountHasDividendPoolStake = stakedBalance && stakedBalance.gt(0)\n  // const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const dividendPool = poolsWithoutAutoVault.find((pool) => pool.sousId === 1)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    const cakeDividendPool = { ...dividendPool, isDividendPool: true }\n    return [cakeDividendPool, ...poolsWithoutAutoVault.filter((pool) => pool.sousId !== 1), cakeAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        if (pool.isDividendPool) {\n          return accountHasDividendPoolStake\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares, accountHasDividendPoolStake],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        if (pool.isDividendPool) {\n          return accountHasDividendPoolStake\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares, accountHasDividendPoolStake],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchDividendPool()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  // const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setSearchQuery(event.target.value)\n  // }\n\n  // const handleSortOptionChange = (option: OptionProps): void => {\n  //   setSortOption(option.value)\n  // }\n\n  // const sortPools = (poolsToSort: Pool[]) => {\n  //   switch (sortOption) {\n  //     case 'apr':\n  //       // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n  //       return orderBy(\n  //         poolsToSort,\n  //         (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n  //         'desc',\n  //       )\n  //     case 'earned':\n  //       return orderBy(\n  //         poolsToSort,\n  //         (pool: Pool) => {\n  //           if (!pool.userData || !pool.earningTokenPrice) {\n  //             return 0\n  //           }\n  //           return pool.isAutoVault\n  //             ? getCakeVaultEarnings(\n  //                 account,\n  //                 glideAtLastUserAction,\n  //                 userShares,\n  //                 pricePerFullShare,\n  //                 pool.earningTokenPrice,\n  //               ).autoUsdToDisplay\n  //             : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n  //         },\n  //         'desc',\n  //       )\n  //     case 'totalStaked':\n  //       return orderBy(\n  //         poolsToSort,\n  //         (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n  //         'desc',\n  //       )\n  //     default:\n  //       return poolsToSort\n  //   }\n  // }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  // if (searchQuery) {\n  //   const lowercaseQuery = latinise(searchQuery.toLowerCase())\n  //   chosenPools = chosenPools.filter((pool) =>\n  //     latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n  //   )\n  // }\n\n  // chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPools = chosenPools.slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isDividendPool ? (\n          <DividendPoolCard key=\"dividend-pool\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  // const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <Page>\n        <PageHeader>\n          <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n            <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n              <GradientHeading as=\"h1\" scale=\"xxl\" color=\"glide\" mb=\"24px\">\n                {t('Sugar Pools')}\n              </GradientHeading>\n              <Heading scale=\"lg\" color=\"text\">\n                {t('Stake tokens to earn')}\n              </Heading>\n              {/* <Heading scale=\"md\" color=\"text\">\n                {t('High APR, low risk.')}\n              </Heading> */}\n            </Flex>\n            <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n              {/* <HelpButton /> */}\n              <BountyCard />\n            </Flex>\n          </Flex>\n        </PageHeader>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          {/* <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer> */}\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\" ml=\"12px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {chainId !== 20 && (\n          <ConnectContainer justifyContent=\"center\">\n            <Button\n              onClick={() => {\n                setupNetwork(20, library)\n              }}\n            >\n              {t('Connect to the Elastos network to begin')}\n            </Button>\n          </ConnectContainer>\n        )}\n        {/* {viewMode === ViewMode.CARD ? cardLayout : tableLayout} */}\n        {cardLayout}\n        <div ref={loadMoreRef} />\n        {/* <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  glideAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && glideAtLastUserAction && glideAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(glideAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Community } from 'state/types'\nimport { getAprData } from 'views/Community/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Community\n  stakedBalance?: any\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CLUBBNAIR is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/add/${getAddress(stakingToken.address)}/ELA` : '/add'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@glide-finance/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  HelpIcon,\n} from '@glide-finance/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    // startBlock,\n    // endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              {/* <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}> */}\n              <Balance small value={blocksToDisplay} decimals={0} />\n              <Text small ml=\"4px\" textTransform=\"lowercase\">\n                {t('Blocks')}\n              </Text>\n              <TimerIcon ml=\"4px\" />\n              {/* </Link> */}\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      {/* <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex> */}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@glide-finance/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automatically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@glide-finance/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  pairToken?: Token\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, pairToken, isFinished = false }) => {\n  const { t } = useTranslation()\n  // const background = isStaking ? 'bubblegum' : 'cardHeader'\n  const background = 'bubblegum'\n\n  const getHeadingPrefix = () => {\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {/* <TokenImage token={earningToken} width={64} height={64} /> */}\n        <TokenPairImage\n          variant=\"inverted\"\n          primaryToken={earningToken}\n          secondaryToken={pairToken}\n          width={80}\n          height={80}\n        />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCommunityChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useCommunityChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CLUBBNAIR' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\n// import styled from 'styled-components'\nimport { Modal, Text, Button } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\n// const StyledLink = styled(Link)`\n//   width: 100%;\n// `\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Create some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/add\">\n        {t('Create')} {tokenSymbol}\n      </Button>\n      {/* <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink> */}\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@glide-finance/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useCommunityChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useCommunityChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useCommunityChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useCommunityChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, Slider, BalanceInput, AutoRenewIcon } from '@glide-finance/uikit'\n// import { TokenPairImage } from 'components/TokenImage'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Community } from 'state/types'\n// import { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Community\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\n// const StyledLink = styled(Link)`\n//   width: 100%;\n// `\n\nconst StyledText = styled(Text)`\n  white-space: nowrap;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          {/* <TokenPairImage\n            variant=\"inverted\"\n            primaryToken={earningToken}\n            secondaryToken={pairToken}\n            width={32}\n            height={32}\n          /> */}\n          <StyledText ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </StyledText>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {/* {!isRemovingStake && (\n        <StyledLink external href=\"/add\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )} */}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Community } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Community\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useCommunityChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useCommunityChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CLUBBNAIR into pool.')}</Text>\n      <Text>{t('Harvest: collect CLUBBNAIR and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        disabled={chainId !== 20}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@glide-finance/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Community } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Community; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, pairToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    // <StyledCard\n    //   isFinished={isFinished && sousId !== 0}\n    //   ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    // >\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        pairToken={pairToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          style={{ marginTop: '10px' }}\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new CLUBBNAIR in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 7 days')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 7 days of staking. Unstaking after 7 days will not include a fee. Timer resets every time you stake new CLUBBNAIR in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const usdValueStaked =\n    cakePriceUsdc.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceUsdc).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your tokens have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceUsdc.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const stakedDollarValue = cakePriceUsdc.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceUsdc), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceUsdc.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CLUBBNAIR\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@glide-finance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeUsdc } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { glideAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceUsdc = usePriceCakeUsdc()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    glideAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceUsdc.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CLUBBNAIR profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader isStaking={accountHasSharesStaked} earningToken={tokens.glide} stakingToken={tokens.glide} />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval || chainId !== 20}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useDividendPool } from 'state/pools/hooks'\n// import { useDividendPoolContract } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from '../PoolCard/Modals/PercentageButton'\nimport useStakePool from '../../hooks/useStakePool'\nimport useUnstakePool from '../../hooks/useUnstakePool'\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst DividendStakeModal: React.FC<StakeModalProps> = ({ isBnbPool, pool, isRemovingStake = false, onDismiss }) => {\n  // const dividendPoolContract = useDividendPoolContract()\n  const {\n    stakingTokenPrice,\n    userData: { stakingTokenBalance },\n  } = useDividendPool()\n  const { chainId } = useActiveWeb3React()\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% tokens have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || chainId !== 20}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default DividendStakeModal\n","import React from 'react'\nimport {\n  Flex,\n  Text,\n  Button,\n  IconButton,\n  AddIcon,\n  MinusIcon,\n  useModal,\n  Skeleton,\n  useTooltip,\n} from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport DividendStakeModal from '../DividendStakeModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} />)\n  const [onPresentUnstake] = useModal(<DividendStakeModal isBnbPool={isBnbPool} pool={pool} isRemovingStake />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button\n        disabled={isFinished || chainId !== 20}\n        onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n      >\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings || chainId !== 20} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst DividendCardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, earningTokenPrice, userData } = pool\n  // Pools using native ELA behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default DividendCardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CardBody, Flex, Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useDividendPool } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\n// import VaultCardActions from './VaultCardActions'\nimport DividendCardActions from './DividendCardActions'\n// import UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n// import RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface DividendPoolProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst DividendPoolCard: React.FC<DividendPoolProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { isLoading, allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  } = useDividendPool()\n\n  const dividendPool = {\n    ...pool,\n    userData: { allowance, stakingTokenBalance, stakedBalance, pendingReward },\n    apr,\n  }\n\n  const accountHasSharesStaked = stakedBalance && stakedBalance.gt(0)\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader isStaking={accountHasSharesStaked} earningToken={tokens.ela} stakingToken={tokens.glide} />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={dividendPool} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            // <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            <DividendCardActions pool={dividendPool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={dividendPool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default DividendPoolCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n// import ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  // const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {/* {viewModeToggle} */}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, GradientHeading, Flex, Text, Button } from '@glide-finance/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicCommunityData, useCommunityChef } from 'state/community/hooks'\n// import tokens from 'config/constants/tokens'\nimport { usePollFarmsData } from 'state/farms/hooks'\n// import { latinise } from 'utils/latinise'\nimport { setupNetwork } from 'utils/wallet'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport DividendPoolCard from './components/DividendPoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\n// import HelpButton from './components/HelpButton'\n// import PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst ConnectContainer = styled(Flex)`\n  margin-bottom: 15px;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Community: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account, chainId, library } = useWeb3React()\n  const { community: poolsWithoutAutoVault, userDataLoaded } = useCommunityChef(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'glide_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'glide_pool_view' })\n  // const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('apr')\n  const chosenPoolsLength = useRef(0)\n\n  // const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    return [...poolsWithoutAutoVault.filter((pool) => pool.sousId !== 1)]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchPublicCommunityData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  // const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setSearchQuery(event.target.value)\n  // }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(poolsToSort, (pool: Pool) => (pool.apr ? getAprData(pool, 0).apr : 0), 'desc')\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(poolsToSort, (pool: Pool) => pool.totalStaked.toNumber(), 'desc')\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  // if (searchQuery) {\n  //   const lowercaseQuery = latinise(searchQuery.toLowerCase())\n  //   chosenPools = chosenPools.filter((pool) =>\n  //     latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n  //   )\n  // }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPools = chosenPools.slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isDividendPool ? (\n          <DividendPoolCard key=\"dividend-pool\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  // const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <Page>\n        <PageHeader>\n          <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n            <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n              <GradientHeading as=\"h1\" scale=\"xxl\" color=\"glide\" mb=\"24px\">\n                {t('Community Zone')}\n              </GradientHeading>\n              <Heading scale=\"lg\" color=\"text\">\n                {t(`Don't let your memes be dreams`)}\n              </Heading>\n            </Flex>\n          </Flex>\n        </PageHeader>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            {/* <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper> */}\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\" ml=\"12px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {chainId !== 20 && (\n          <ConnectContainer justifyContent=\"center\">\n            <Button\n              onClick={() => {\n                setupNetwork(20, library)\n              }}\n            >\n              {t('Connect to the Elastos network to begin')}\n            </Button>\n          </ConnectContainer>\n        )}\n        {/* {viewMode === ViewMode.CARD ? cardLayout : tableLayout} */}\n        {cardLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Community\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\n// import { getDividendPoolContract, getCakeContract } from 'utils/contractHelpers'\nimport {\n  fetchCommunityPublicDataAsync,\n  fetchCommunityUserDataAsync,\n  fetchCommunityStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\n// import { transformPool, getTokenPricesFromFarm } from './helpers'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicCommunityData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchCommunityPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchCommunityPublicDataAsync(blockNumber))\n    }\n\n    fetchCommunityPublicData()\n    dispatch(fetchCommunityStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useCommunityChef = (account): { community: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchCommunityUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { community, userDataLoaded } = useSelector((state: State) => ({\n    community: state.community.data,\n    userDataLoaded: state.community.userDataLoaded,\n  }))\n  return { community: community.map(transformPool), userDataLoaded }\n}\n\nexport const useCommunityChefPublicData = (): { community: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    const fetchCommunityPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchCommunityPublicDataAsync(blockNumber))\n    }\n\n    fetchCommunityPublicData()\n  }, [dispatch, fastRefresh])\n\n  const { community, userDataLoaded } = useSelector((state: State) => ({\n    community: state.community.data,\n    userDataLoaded: state.community.userDataLoaded,\n  }))\n  return { community: community.map(transformPool), userDataLoaded }\n}","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on explorer')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@glide-finance/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@glide-finance/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@glide-finance/sdk'\nimport { Button, Text, AutoRenewIcon } from '@glide-finance/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.05% to LP token holders</Text>\n                  <Text>- 0.20% is converted to ELA and shared with users</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Trade, TradeType } from '@glide-finance/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@glide-finance/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t(`Output is estimated. You will receive at least`)}{' '}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' '}{t('or the transaction will revert.')}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {t(`Input is estimated. You will sell at most`)}{' '}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' '}{t('or the transaction will revert.')}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {t('Output will be sent to')}{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@glide-finance/sdk'\nimport { InjectedModalProps } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@glide-finance/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@glide-finance/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@glide-finance/sdk'\nimport { Text } from '@glide-finance/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.05% to LP token holders</Text>\n                <Text>- 0.20% is converted to ELA and shared with users</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@glide-finance/sdk'\nimport { Text, AutoRenewIcon } from '@glide-finance/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@glide-finance/sdk'\nimport { Modal, InjectedModalProps } from '@glide-finance/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@glide-finance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@glide-finance/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@glide-finance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@glide-finance/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@glide-finance/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@glide-finance/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@glide-finance/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport { setupNetwork } from 'utils/wallet'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { GradientHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport GradientPage from '../GradientPage'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <GradientPage>\n      <AppBody>\n        <GradientHeader title={t('Exchange')} subtitle={t('Trade tokens effortlessly')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {chainId !== 20 ? (\n              <Button\n                width=\"100%\"\n                onClick={() => {\n                  setupNetwork(20, library)\n                }}\n              >\n                {t('Connect to the Elastos network to begin')}\n              </Button>\n            ) : swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? t(`Price Impact Too High`)\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </GradientPage>\n  )\n}\n","import { Percent } from '@glide-finance/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|ELA)-(0x[a-fA-F0-9]{40}|ELA)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@glide-finance/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\n// import { usePollCoreFarmData } from 'state/farms/hooks'\n// import { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\n// import EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Community from './views/Community'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Bridge = lazy(() => import('./views/Bridge'))\n// const FarmAuction = lazy(() => import('./views/FarmAuction'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst Info = lazy(() => import('./views/Info'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Collectibles = lazy(() => import('./views/Collectibles'))\n// const Teams = lazy(() => import('./views/Teams'))\n// const Team = lazy(() => import('./views/Teams/Team'))\n// const Profile = lazy(() => import('./views/Profile'))\n// const TradingCompetition = lazy(() => import('./views/TradingCompetition'))\n// const Predictions = lazy(() => import('./views/Predictions'))\n// const Voting = lazy(() => import('./views/Voting'))\n// const Proposal = lazy(() => import('./views/Voting/Proposal'))\n// const CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  useEagerConnect()\n  // useFetchProfile()\n  usePollBlockNumber()\n  // usePollCoreFarmData()\n  usePollFarmsData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            {/* <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route> */}\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/community\">\n              <Community />\n            </Route>\n            <Route path=\"/bridge\">\n              <Bridge />\n            </Route>\n            {/* <Route path=\"/lottery\">\n              <Lottery />\n            </Route> */}\n            {/* <Route path=\"/ifo\">\n              <Ifos />\n            </Route> */}\n            {/* <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route> */}\n            {/* <Route exact path=\"/teams\">\n              <Teams />\n            </Route> */}\n            {/* <Route path=\"/teams/:id\">\n              <Team />\n            </Route> */}\n            {/* <Route path=\"/profile\">\n              <Profile />\n            </Route> */}\n            {/* <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route> */}\n            {/* <Route path=\"/prediction\">\n              <Predictions />\n            </Route> */}\n            {/* <Route exact path=\"/voting\">\n              <Voting />\n            </Route> */}\n            {/* <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route> */}\n            {/* <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route> */}\n\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/sugar\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route> */}\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      {/* <EasterEgg iterations={2} /> */}\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, dark } from '@glide-finance/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\n// import { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  // const [isDark] = useThemeManager()\n  // return <ThemeProvider theme={isDark ? dark : light} {...props} />\n  return <ThemeProvider theme={dark} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}